{
    "openapi": "3.0.3",
    "info": {
        "title": "CardSightAI Edge API",
        "description": "High-performance API service for CardSightAI",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header"
            }
        },
        "schemas": {}
    },
    "paths": {
        "/health": {
            "get": {
                "summary": "Basic health check",
                "tags": [
                    "Health"
                ],
                "description": "Returns the current health status of the service",
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/auth": {
            "get": {
                "summary": "Authenticated health check",
                "tags": [
                    "Health"
                ],
                "description": "Returns the current health status of the service. Requires a valid API key to access. Use this endpoint to validate that your API key is configured correctly.",
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/identify/card": {
            "post": {
                "summary": "Identifies a baseball card from the submitted image",
                "tags": [
                    "Card Identification"
                ],
                "description": "Identify a baseball card from an image. Supports both multipart/form-data and direct binary upload (image/jpeg, image/png, etc.)",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "requestId": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "cardId": {
                                                    "description": "UUID of identified card (if found in database)",
                                                    "type": "string"
                                                },
                                                "confidence": {
                                                    "type": "number"
                                                },
                                                "detectionConfidence": {
                                                    "type": "number"
                                                },
                                                "classificationConfidence": {
                                                    "type": "number"
                                                },
                                                "aiIdentification": {
                                                    "type": "object",
                                                    "properties": {
                                                        "year": {
                                                            "type": "string"
                                                        },
                                                        "release": {
                                                            "type": "string"
                                                        },
                                                        "set": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "number": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "year",
                                                        "release",
                                                        "name"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "card": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "description": "UUID of the card",
                                                            "type": "string"
                                                        },
                                                        "year": {
                                                            "type": "string"
                                                        },
                                                        "manufacturer": {
                                                            "type": "string"
                                                        },
                                                        "release": {
                                                            "type": "string"
                                                        },
                                                        "set": {
                                                            "type": "string"
                                                        },
                                                        "playerName": {
                                                            "type": "string"
                                                        },
                                                        "cardNumber": {
                                                            "type": "string"
                                                        },
                                                        "variant": {
                                                            "type": "string"
                                                        },
                                                        "frontImageUrl": {
                                                            "type": "string"
                                                        },
                                                        "backImageUrl": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "year",
                                                        "manufacturer",
                                                        "release",
                                                        "playerName"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "processingTime": {
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "confidence",
                                                "aiIdentification",
                                                "processingTime"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "requestId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "enum": [
                                                false
                                            ]
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "enum": [
                                                false
                                            ]
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "enum": [
                                                false
                                            ]
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "message"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "error"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/statistics": {
            "get": {
                "summary": "Get comprehensive catalog statistics",
                "tags": [
                    "Catalog"
                ],
                "description": "\n# Catalog Statistics\n\nThis endpoint provides comprehensive statistics about the entire card catalog database.\n\n**Purpose:**\nCollectors can view high-level metrics to understand the scope and breadth of the CardSight AI catalog. This helps inform collecting strategies by showing:\n- What segments and manufacturers are available\n- How many releases exist per year\n- The depth of card data (base cards vs parallels vs variations)\n- AI identification capabilities\n\n**Response Structure:**\n\n**Segments:**\n- Total count of sports/card segments\n- Breakdown showing each segment name with release count\n\n**Manufacturers:**\n- Total count of card manufacturers\n- All manufacturers with their release counts\n\n**Releases:**\n- Total count across all years\n- Breakdown by segment with total releases per segment\n- Within each segment, year-by-year breakdown of release counts\n\n**Sets:**\n- Total count of card sets\n- Count of identifiable sets (sets that can be recognized by AI)\n\n**Cards:**\n- Total count of all cards in catalog\n- Count of base cards (original cards)\n- Count of variations (alternate versions of base cards)\n\n**Parallels:**\n- Total count of parallel types\n- Count of full set parallels (apply to entire set)\n- Count of partial parallels (apply to specific cards only)\n\n**Caching:**\nThis endpoint is cached for 1 hour to optimize performance since catalog statistics change infrequently.\n\n**Use Cases:**\n- Understanding catalog coverage before starting a collection\n- Identifying which manufacturers have the most complete data\n- Seeing historical trends in releases by year\n- Gauging AI identification capabilities for specific sets\n",
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "segments": {
                                            "description": "Segment statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of segments",
                                                    "type": "number"
                                                },
                                                "breakdown": {
                                                    "description": "Breakdown of segments with release counts",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Segment name",
                                                                "type": "string"
                                                            },
                                                            "count": {
                                                                "description": "Number of releases in this segment",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "count"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "breakdown"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "manufacturers": {
                                            "description": "Manufacturer statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of manufacturers",
                                                    "type": "number"
                                                },
                                                "breakdown": {
                                                    "description": "All manufacturers with their release counts",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Manufacturer name",
                                                                "type": "string"
                                                            },
                                                            "releaseCount": {
                                                                "description": "Number of releases by this manufacturer",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "releaseCount"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "breakdown"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "releases": {
                                            "description": "Release statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of releases across all years",
                                                    "type": "number"
                                                },
                                                "bySegment": {
                                                    "description": "Breakdown by segment, then by year",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "segmentName": {
                                                                "description": "Segment name",
                                                                "type": "string"
                                                            },
                                                            "total": {
                                                                "description": "Total releases in this segment across all years",
                                                                "type": "number"
                                                            },
                                                            "byYear": {
                                                                "description": "Year-by-year breakdown for this segment",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "year": {
                                                                            "description": "Release year",
                                                                            "type": "string"
                                                                        },
                                                                        "count": {
                                                                            "description": "Number of releases in this year for this segment",
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "year",
                                                                        "count"
                                                                    ],
                                                                    "additionalProperties": false
                                                                }
                                                            }
                                                        },
                                                        "required": [
                                                            "segmentName",
                                                            "total",
                                                            "byYear"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "bySegment"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "sets": {
                                            "description": "Set statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of card sets",
                                                    "type": "number"
                                                },
                                                "identifiable": {
                                                    "description": "Number of sets that can be recognized by AI",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "identifiable"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "cards": {
                                            "description": "Card statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of all cards in catalog",
                                                    "type": "number"
                                                },
                                                "base": {
                                                    "description": "Count of base cards (original cards)",
                                                    "type": "number"
                                                },
                                                "variations": {
                                                    "description": "Count of card variations",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "base",
                                                "variations"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "parallels": {
                                            "description": "Parallel statistics",
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of parallel types",
                                                    "type": "number"
                                                },
                                                "fullSet": {
                                                    "description": "Count of full set parallels (apply to entire set)",
                                                    "type": "number"
                                                },
                                                "partial": {
                                                    "description": "Count of partial parallels (apply to specific cards only)",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "fullSet",
                                                "partial"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "segments",
                                        "manufacturers",
                                        "releases",
                                        "sets",
                                        "cards",
                                        "parallels"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/segments": {
            "get": {
                "summary": "List market segments",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve a paginated list of market segments (categories) for trading cards. Segments are the highest level of organization, representing markets like Baseball, Pokemon, Magic The Gathering, etc. Use this endpoint to get available segments for filtering releases or building category navigation. Segments can be searched by name and sorted alphabetically. Each segment may contain multiple manufacturers and releases.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Filter segments by name using partial string matching. Case-insensitive. Example: \"sport\" matches \"Sports\", \"Motorsports\", etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. Currently only supports sorting by segment name."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (A-Z), \"desc\" for descending (Z-A). Defaults to ascending."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "segments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the segment. Format: UUID v4. This ID is permanent and used for all API operations involving this segment.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Display name of the segment. Examples: \"Sports\", \"Entertainment\", \"Gaming\". Used for categorizing releases and filtering.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "segments",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "segments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the segment. Format: UUID v4. This ID is permanent and used for all API operations involving this segment.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Display name of the segment. Examples: \"Sports\", \"Entertainment\", \"Gaming\". Used for categorizing releases and filtering.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "segments",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/manufacturers": {
            "get": {
                "summary": "List card manufacturers",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve a paginated list of trading card manufacturers/companies. Manufacturers are companies that produce trading cards (e.g., Topps, Panini, Upper Deck). Use this endpoint to get available manufacturers for filtering releases or understanding the card market landscape. Manufacturers can be searched by name and sorted alphabetically. Each manufacturer may have releases across multiple segments and years.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Filter manufacturers by name using partial string matching. Case-insensitive. Example: \"top\" matches \"Topps\", \"Topps Chrome\", etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. Currently only supports sorting by manufacturer name."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (A-Z), \"desc\" for descending (Z-A). Defaults to ascending."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "manufacturers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the manufacturer. Format: UUID v4. This ID is permanent and used for all API operations involving this manufacturer.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Official name of the manufacturer. Examples: \"Topps\", \"Panini America\", \"Upper Deck\". This is the primary display name.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional information about the manufacturer, such as founding year, headquarters, or notable product lines. May be null if not provided.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "manufacturers",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "manufacturers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the manufacturer. Format: UUID v4. This ID is permanent and used for all API operations involving this manufacturer.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Official name of the manufacturer. Examples: \"Topps\", \"Panini America\", \"Upper Deck\". This is the primary display name.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional information about the manufacturer, such as founding year, headquarters, or notable product lines. May be null if not provided.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "manufacturers",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/releases": {
            "get": {
                "summary": "Browse and search Releases with pagination",
                "tags": [
                    "Catalog"
                ],
                "description": "Browse and search Releases with pagination",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "segment",
                        "required": false,
                        "description": "Filter releases by segment. Accepts either a UUID (e.g., \"550e8400-e29b-41d4-a716-446655440000\") or exact segment name (e.g., \"Sports\"). Case-insensitive for names."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "manufacturer",
                        "required": false,
                        "description": "Filter releases by manufacturer. Accepts either a UUID or exact manufacturer name (e.g., \"Topps\", \"Panini\"). Case-insensitive for names."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter by exact year (e.g., \"2023\"). When specified, overrides min_year and max_year parameters."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "min_year",
                        "required": false,
                        "description": "Filter releases from this year onwards (inclusive). Example: \"2020\" returns releases from 2020, 2021, 2022, etc. Ignored if \"year\" is specified."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "max_year",
                        "required": false,
                        "description": "Filter releases up to this year (inclusive). Example: \"2022\" returns releases from 2022 and earlier. Ignored if \"year\" is specified."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search releases by name using partial string matching. Case-insensitive. Example: \"chrome\" matches \"Topps Chrome\", \"Bowman Chrome\", etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "year",
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"year\" sorts by release year, \"name\" sorts alphabetically by release name."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (oldest first for year, A-Z for name), \"desc\" for descending (newest first for year, Z-A for name)."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "releases": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "manufacturerId": {
                                                        "description": "UUID of the manufacturer that produced this release. Links to the manufacturer entity.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "segmentId": {
                                                        "description": "UUID of the segment this release belongs to. Links to the segment entity. Determines the market category (Sports, Entertainment, etc.).",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the release. Format: UUID v4. This ID is permanent and used for all API operations involving this release.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "year": {
                                                        "description": "Year the release was issued. Format: YYYY (e.g., \"2023\"). Used for chronological filtering and sorting.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Full name of the release. Typically includes year, brand, and sport/category. Example: \"2023 Topps Chrome Baseball\"",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "manufacturerId",
                                                    "segmentId",
                                                    "id",
                                                    "year",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "releases",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "releases": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "manufacturerId": {
                                                        "description": "UUID of the manufacturer that produced this release. Links to the manufacturer entity.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "segmentId": {
                                                        "description": "UUID of the segment this release belongs to. Links to the segment entity. Determines the market category (Sports, Entertainment, etc.).",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the release. Format: UUID v4. This ID is permanent and used for all API operations involving this release.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "year": {
                                                        "description": "Year the release was issued. Format: YYYY (e.g., \"2023\"). Used for chronological filtering and sorting.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Full name of the release. Typically includes year, brand, and sport/category. Example: \"2023 Topps Chrome Baseball\"",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "manufacturerId",
                                                    "segmentId",
                                                    "id",
                                                    "year",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "releases",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/releases/{id}": {
            "get": {
                "summary": "Get detailed information about a specific Release",
                "tags": [
                    "Catalog"
                ],
                "description": "Get detailed information about a specific Release including Sets and Card counts",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Unique identifier for the release. Must be a valid UUID format. Example: \"550e8400-e29b-41d4-a716-446655440000\""
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the release. Format: UUID v4. This ID is permanent and used for all API operations involving this release.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "segmentId": {
                                            "description": "UUID of the segment this release belongs to. Links to the segment entity. Determines the market category (Sports, Entertainment, etc.).",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "manufacturerId": {
                                            "description": "UUID of the manufacturer that produced this release. Links to the manufacturer entity.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "year": {
                                            "description": "Year the release was issued. Format: YYYY (e.g., \"2023\"). Used for chronological filtering and sorting.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Full name of the release. Typically includes year, brand, and sport/category. Example: \"2023 Topps Chrome Baseball\"",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional details about the release, such as special features, number of cards, or notable inclusions. May be null.",
                                            "type": "string"
                                        },
                                        "sets": {
                                            "description": "Sets within this release",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in this set",
                                                        "type": "number"
                                                    },
                                                    "parallelCount": {
                                                        "description": "Number of parallel types in this set",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "cardCount",
                                                    "parallelCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "segmentId",
                                        "manufacturerId",
                                        "year",
                                        "name",
                                        "sets"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the release. Format: UUID v4. This ID is permanent and used for all API operations involving this release.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "segmentId": {
                                            "description": "UUID of the segment this release belongs to. Links to the segment entity. Determines the market category (Sports, Entertainment, etc.).",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "manufacturerId": {
                                            "description": "UUID of the manufacturer that produced this release. Links to the manufacturer entity.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "year": {
                                            "description": "Year the release was issued. Format: YYYY (e.g., \"2023\"). Used for chronological filtering and sorting.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Full name of the release. Typically includes year, brand, and sport/category. Example: \"2023 Topps Chrome Baseball\"",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional details about the release, such as special features, number of cards, or notable inclusions. May be null.",
                                            "type": "string"
                                        },
                                        "sets": {
                                            "description": "Sets within this release",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in this set",
                                                        "type": "number"
                                                    },
                                                    "parallelCount": {
                                                        "description": "Number of parallel types in this set",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "cardCount",
                                                    "parallelCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "segmentId",
                                        "manufacturerId",
                                        "year",
                                        "name",
                                        "sets"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/releases/{id}/cards": {
            "get": {
                "summary": "List all cards in a release",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve a paginated list of all base cards (not parallels) within a specific release across all its sets. Use the optional setId parameter to filter to a specific set within the release. Cards can be searched by player name and sorted by card number or name. This endpoint is ideal for building complete checklists, player searches within a release, or browsing all cards in a product.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "setId",
                        "required": false,
                        "description": "Filter cards to a specific set within the release. Must be a valid UUID. Example: \"550e8400-e29b-41d4-a716-446655440000\""
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search cards by player/subject name using partial string matching. Case-insensitive. Example: \"jordan\" matches \"Michael Jordan\", \"Jordan Love\", etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "number",
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"number\" sorts by card number in set, \"name\" sorts alphabetically by player/subject name."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (1-999 for number, A-Z for name), \"desc\" for descending (999-1 for number, Z-A for name)."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Unique identifier for the release. Must be a valid UUID format. Example: \"550e8400-e29b-41d4-a716-446655440000\""
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/sets": {
            "get": {
                "summary": "List and search card sets",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve a paginated list of card sets across all releases. Sets represent collections within releases (e.g., \"Base Set\", \"Rookie Autographs\"). Filter by release, year range, manufacturer, or search by name. Results include card and parallel counts for each set. Use this endpoint to explore available sets, build set checklists, or filter sets by specific criteria. Each set belongs to exactly one release.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "releaseId",
                        "required": false,
                        "description": "Filter sets to a specific release. Must be a valid UUID. Example: \"550e8400-e29b-41d4-a716-446655440000\""
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search sets by name using partial string matching. Case-insensitive. Example: \"base\" matches \"Base Set\", \"Base Chrome\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter sets by exact release year (e.g., \"2023\"). When specified, overrides min_year and max_year parameters."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "min_year",
                        "required": false,
                        "description": "Filter sets from releases in this year onwards (inclusive). Example: \"2020\" returns sets from 2020, 2021, 2022 releases, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "max_year",
                        "required": false,
                        "description": "Filter sets from releases up to this year (inclusive). Example: \"2022\" returns sets from 2022 and earlier releases."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "manufacturer",
                        "required": false,
                        "description": "Filter sets by manufacturer. Accepts either a UUID or exact manufacturer name (e.g., \"Topps\", \"Panini\"). Filters through the release relationship."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "year"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"name\" sorts by set name, \"year\" sorts by release year then set name."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending, \"desc\" for descending."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sets": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in this set",
                                                        "type": "number"
                                                    },
                                                    "parallelCount": {
                                                        "description": "Number of parallel types in this set",
                                                        "type": "number"
                                                    },
                                                    "releaseId": {
                                                        "description": "Release UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "cardCount",
                                                    "parallelCount",
                                                    "releaseId",
                                                    "releaseName",
                                                    "releaseYear"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "sets",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sets": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in this set",
                                                        "type": "number"
                                                    },
                                                    "parallelCount": {
                                                        "description": "Number of parallel types in this set",
                                                        "type": "number"
                                                    },
                                                    "releaseId": {
                                                        "description": "Release UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "cardCount",
                                                    "parallelCount",
                                                    "releaseId",
                                                    "releaseName",
                                                    "releaseYear"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "sets",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/sets/{id}": {
            "get": {
                "summary": "Get complete set details",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve comprehensive information about a specific set including its release context, card count, and all parallel variants. Returns the set details along with release information (name, year) and a complete list of parallel types available for cards in this set. Use this endpoint for detailed set views, understanding set composition, or displaying complete set information with all variants.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Set UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "releaseId": {
                                            "description": "UUID of the release this set belongs to. Links to the release entity. A release typically contains multiple sets.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Name of the release",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Year of the release",
                                            "type": "string"
                                        },
                                        "cardCount": {
                                            "description": "Number of base cards",
                                            "type": "number"
                                        },
                                        "parallelCount": {
                                            "description": "Number of parallel types",
                                            "type": "number"
                                        },
                                        "parallels": {
                                            "description": "List of parallel variants in this set",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "releaseId",
                                        "name",
                                        "releaseName",
                                        "releaseYear",
                                        "cardCount",
                                        "parallelCount",
                                        "parallels"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the set. Format: UUID v4. This ID is permanent and used for all API operations involving this set.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "releaseId": {
                                            "description": "UUID of the release this set belongs to. Links to the release entity. A release typically contains multiple sets.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the set within the release. Examples: \"Base Set\", \"Rookie Autographs\", \"Legends\". Describes the theme or type of cards in this set.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional details about the set, such as card count, special features, or checklist highlights. May be null.",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Name of the release",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Year of the release",
                                            "type": "string"
                                        },
                                        "cardCount": {
                                            "description": "Number of base cards",
                                            "type": "number"
                                        },
                                        "parallelCount": {
                                            "description": "Number of parallel types",
                                            "type": "number"
                                        },
                                        "parallels": {
                                            "description": "List of parallel variants in this set",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "releaseId",
                                        "name",
                                        "releaseName",
                                        "releaseYear",
                                        "cardCount",
                                        "parallelCount",
                                        "parallels"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/sets/{id}/cards": {
            "get": {
                "summary": "List cards within a set",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve a paginated list of all base cards within a specific set. Cards can be filtered by player name or card number, and sorted by number or name. This endpoint returns only the base versions of cards, not their parallel variants. Use this for building set checklists, finding specific cards within a set, or displaying complete set contents. Each card includes its number, name, and basic information.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search by card name (partial match)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "number",
                        "required": false,
                        "description": "Filter by card number"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "number",
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort by"
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Set UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/cards": {
            "get": {
                "summary": "Search cards across entire catalog",
                "tags": [
                    "Catalog"
                ],
                "description": "Global search endpoint for finding base cards across all releases, sets, and manufacturers. Supports complex filtering by player name, card number, release, set, year range, manufacturer, and attributes. Results include card details with release and set information. This is the primary endpoint for card discovery, player collections, and cross-product searches. Use specific release or set endpoints for more focused searches.",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search cards by player/subject name using partial string matching. Case-insensitive. Example: \"lebron\" matches \"LeBron James\", \"LeBron James Jr.\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "number",
                        "required": false,
                        "description": "Filter by exact card number. Example: \"23\" returns all cards numbered 23 across all sets."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "releaseId",
                        "required": false,
                        "description": "Filter cards to a specific release. Must be a valid UUID. Example: \"550e8400-e29b-41d4-a716-446655440000\""
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "releaseName",
                        "required": false,
                        "description": "Filter cards by release name using partial string matching. Case-insensitive. Example: \"chrome\" matches cards from \"Topps Chrome\", \"Bowman Chrome\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter cards by exact release year (e.g., \"2023\"). When specified, overrides min_year and max_year parameters."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "min_year",
                        "required": false,
                        "description": "Filter cards from releases in this year onwards (inclusive). Example: \"2020\" returns cards from 2020, 2021, 2022 releases, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "max_year",
                        "required": false,
                        "description": "Filter cards from releases up to this year (inclusive). Example: \"2022\" returns cards from 2022 and earlier releases."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "setId",
                        "required": false,
                        "description": "Filter cards to a specific set. Must be a valid UUID. More specific than releaseId filter."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "setName",
                        "required": false,
                        "description": "Filter cards by set name using partial string matching. Case-insensitive. Example: \"rookie\" matches cards from \"Rated Rookies\", \"Rookie Stars\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "manufacturer",
                        "required": false,
                        "description": "Filter cards by manufacturer. Accepts either a UUID or exact manufacturer name (e.g., \"Topps\", \"Panini\"). Filters through the release relationship."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "attributeId",
                        "required": false,
                        "description": "Filter cards by attribute UUID. Returns only cards tagged with this specific attribute (e.g., Rookie Card, Autograph, etc.)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "attributeShortName",
                        "required": false,
                        "description": "Filter cards by attribute short name/code. Example: \"RC\" for Rookie Cards, \"AU\" for Autographs. Case-sensitive."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "release",
                                "set",
                                "year",
                                "price-raw"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"name\" = player name, \"release\" = release name, \"set\" = set name, \"year\" = release year, \"price-raw\" = raw/ungraded card price (highest to lowest when desc)."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (lowest to highest price), \"desc\" for descending (highest to lowest price)."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "releaseId": {
                                                        "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setId": {
                                                        "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "id": {
                                                        "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "number": {
                                                        "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Name of the set this card belongs to",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Name of the release",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Year of the release",
                                                        "type": "string"
                                                    },
                                                    "attributes": {
                                                        "description": "Array of attribute short names",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for the base card. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "releaseId",
                                                    "setId",
                                                    "id",
                                                    "name",
                                                    "setName"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/cards/{id}": {
            "get": {
                "summary": "Get complete card details",
                "tags": [
                    "Catalog"
                ],
                "description": "Retrieve comprehensive information about a specific card including its release, set, attributes, and available parallel variants. Returns full card details with contextual information about where it belongs in the catalog hierarchy. Includes a count of parallel versions available and all attributes (Rookie, Autograph, etc.) associated with the card. Use this endpoint for detailed card views, collection management, or when you need complete card information.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Card UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "releaseId": {
                                            "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "setId": {
                                            "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "id": {
                                            "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "number": {
                                            "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Name of the release",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Year of the release",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Name of the set",
                                            "type": "string"
                                        },
                                        "numberedTo": {
                                            "description": "Limited print run number for this specific card",
                                            "type": "number"
                                        },
                                        "parallelCount": {
                                            "description": "Number of parallel variants for this card",
                                            "type": "number"
                                        },
                                        "parallels": {
                                            "description": "List of parallel variants available for this card",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "attributes": {
                                            "description": "Array of attribute short names",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "prices": {
                                            "description": "Average pricing data for the base card. Only included when price data is available. Prices are averaged across all available sources.",
                                            "type": "object",
                                            "properties": {
                                                "raw": {
                                                    "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                    "type": "string"
                                                },
                                                "psa-10": {
                                                    "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                    "type": "string"
                                                },
                                                "psa-9": {
                                                    "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "releaseId",
                                        "setId",
                                        "id",
                                        "name",
                                        "setName",
                                        "parallelCount",
                                        "parallels"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "releaseId": {
                                            "description": "UUID of the release this card belongs to. Provided for convenience to avoid additional lookups.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "setId": {
                                            "description": "UUID of the set this card belongs to. Links to the set entity. Determines which collection within the release contains this card.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "id": {
                                            "description": "Unique identifier for the card. Format: UUID v4. This ID is permanent and used for all API operations involving this card.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "number": {
                                            "description": "Card number within the set. Examples: \"23\", \"RC-15\", \"L-5\". May include letters for special subsets. Null for unnumbered cards.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Primary subject of the card. Usually a player name for sports cards (e.g., \"Michael Jordan\") or character/subject for non-sports.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Additional card details such as team, position, special notations, or card back information. May be null.",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Name of the release",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Year of the release",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Name of the set",
                                            "type": "string"
                                        },
                                        "numberedTo": {
                                            "description": "Limited print run number for this specific card",
                                            "type": "number"
                                        },
                                        "parallelCount": {
                                            "description": "Number of parallel variants for this card",
                                            "type": "number"
                                        },
                                        "parallels": {
                                            "description": "List of parallel variants available for this card",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "attributes": {
                                            "description": "Array of attribute short names",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "prices": {
                                            "description": "Average pricing data for the base card. Only included when price data is available. Prices are averaged across all available sources.",
                                            "type": "object",
                                            "properties": {
                                                "raw": {
                                                    "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                    "type": "string"
                                                },
                                                "psa-10": {
                                                    "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                    "type": "string"
                                                },
                                                "psa-9": {
                                                    "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "releaseId",
                                        "setId",
                                        "id",
                                        "name",
                                        "setName",
                                        "parallelCount",
                                        "parallels"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/attributes": {
            "get": {
                "summary": "Browse and search Attributes with card counts",
                "tags": [
                    "Catalog"
                ],
                "description": "Browse and search Attributes with pagination and card count information",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search attributes by full name using partial string matching. Case-insensitive. Example: \"rookie\" matches \"Rookie Card\", \"Rookie Year\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "shortName",
                        "required": false,
                        "description": "Search attributes by short name/code using partial string matching. Case-insensitive. Example: \"R\" matches \"RC\" (Rookie Card), \"RPA\" (Rookie Patch Auto), etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "shortName",
                                "cardCount"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"name\" = full name, \"shortName\" = abbreviation, \"cardCount\" = number of cards with this attribute."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending (A-Z, lowest count first), \"desc\" for descending (Z-A, highest count first)."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the attribute. Format: UUID v4. This ID is permanent and used for all API operations involving this attribute.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Full descriptive name of the attribute. Examples: \"Rookie Card\", \"Autograph\", \"Game-Used Memorabilia\". Used for display purposes.",
                                                        "type": "string"
                                                    },
                                                    "shortName": {
                                                        "description": "Abbreviated code for the attribute. Examples: \"RC\" (Rookie Card), \"AU\" (Autograph), \"GU\" (Game-Used). Used for compact display and filtering.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Detailed explanation of what this attribute represents, when it applies, or any special notes. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of cards with this attribute",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "shortName",
                                                    "cardCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "attributes",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the attribute. Format: UUID v4. This ID is permanent and used for all API operations involving this attribute.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Full descriptive name of the attribute. Examples: \"Rookie Card\", \"Autograph\", \"Game-Used Memorabilia\". Used for display purposes.",
                                                        "type": "string"
                                                    },
                                                    "shortName": {
                                                        "description": "Abbreviated code for the attribute. Examples: \"RC\" (Rookie Card), \"AU\" (Autograph), \"GU\" (Game-Used). Used for compact display and filtering.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Detailed explanation of what this attribute represents, when it applies, or any special notes. May be null.",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of cards with this attribute",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "shortName",
                                                    "cardCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "attributes",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/attributes/{id}": {
            "get": {
                "summary": "Get detailed information about a specific Attribute",
                "tags": [
                    "Catalog"
                ],
                "description": "Get detailed information about a specific Attribute including card count",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Attribute UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the attribute. Format: UUID v4. This ID is permanent and used for all API operations involving this attribute.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Full descriptive name of the attribute. Examples: \"Rookie Card\", \"Autograph\", \"Game-Used Memorabilia\". Used for display purposes.",
                                            "type": "string"
                                        },
                                        "shortName": {
                                            "description": "Abbreviated code for the attribute. Examples: \"RC\" (Rookie Card), \"AU\" (Autograph), \"GU\" (Game-Used). Used for compact display and filtering.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Detailed explanation of what this attribute represents, when it applies, or any special notes. May be null.",
                                            "type": "string"
                                        },
                                        "cardCount": {
                                            "description": "Number of cards with this attribute",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "shortName",
                                        "cardCount"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the attribute. Format: UUID v4. This ID is permanent and used for all API operations involving this attribute.",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Full descriptive name of the attribute. Examples: \"Rookie Card\", \"Autograph\", \"Game-Used Memorabilia\". Used for display purposes.",
                                            "type": "string"
                                        },
                                        "shortName": {
                                            "description": "Abbreviated code for the attribute. Examples: \"RC\" (Rookie Card), \"AU\" (Autograph), \"GU\" (Game-Used). Used for compact display and filtering.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Detailed explanation of what this attribute represents, when it applies, or any special notes. May be null.",
                                            "type": "string"
                                        },
                                        "cardCount": {
                                            "description": "Number of cards with this attribute",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "shortName",
                                        "cardCount"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/catalog/parallels": {
            "get": {
                "summary": "Search for parallels across sets and releases",
                "tags": [
                    "Catalog"
                ],
                "description": "Search for parallels by name and filter by release. Returns all sets containing the parallel with release information",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search parallels by name using partial string matching. Case-insensitive. Example: \"gold\" matches \"Gold Refractor\", \"Gold Prizm\", etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "releaseId",
                        "required": false,
                        "description": "Filter parallels to a specific release. Must be a valid UUID. Returns all parallel types across all sets in the release."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "releaseName",
                        "required": false,
                        "description": "Filter parallels by release name using partial string matching. Case-insensitive. Example: \"prizm\" matches parallels from \"Prizm Basketball\", \"Prizm Football\", etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter parallels by exact release year (e.g., \"2023\"). When specified, overrides min_year and max_year parameters."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "min_year",
                        "required": false,
                        "description": "Filter parallels from releases in this year onwards (inclusive). Example: \"2020\" returns parallels from 2020, 2021, 2022 releases, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "max_year",
                        "required": false,
                        "description": "Filter parallels from releases up to this year (inclusive). Example: \"2022\" returns parallels from 2022 and earlier releases."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "release",
                                "set",
                                "year"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort results by. \"name\" = parallel name, \"release\" = release name, \"set\" = set name, \"year\" = release year."
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort direction. \"asc\" for ascending, \"desc\" for descending."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "parallels": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "setId": {
                                                        "description": "Set UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setName": {
                                                        "description": "Set name",
                                                        "type": "string"
                                                    },
                                                    "releaseId": {
                                                        "description": "Release UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in the set",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "setId",
                                                    "setName",
                                                    "releaseId",
                                                    "releaseName",
                                                    "releaseYear",
                                                    "cardCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "parallels",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "parallels": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the parallel type. Format: UUID v4. This ID represents the parallel variant, not individual cards.",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the parallel variant. Examples: \"Gold Refractor\", \"Black Prizm\", \"Orange\". Describes the visual variant or rarity tier.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Additional details about the parallel such as print run, special features, or visual description. May be null.",
                                                        "type": "string"
                                                    },
                                                    "numberedTo": {
                                                        "description": "Limited print run number for this parallel",
                                                        "type": "number"
                                                    },
                                                    "prices": {
                                                        "description": "Average pricing data for this parallel variant. Only included when price data is available.",
                                                        "type": "object",
                                                        "properties": {
                                                            "raw": {
                                                                "description": "Average price for ungraded/raw condition cards. Format: USD with 2 decimal places (e.g., \"10.00\", \"5.50\")",
                                                                "type": "string"
                                                            },
                                                            "psa-10": {
                                                                "description": "Average price for PSA 10 (Gem Mint) graded cards. Format: USD with 2 decimal places (e.g., \"100.00\", \"75.25\")",
                                                                "type": "string"
                                                            },
                                                            "psa-9": {
                                                                "description": "Average price for PSA 9 (Mint) graded cards. Format: USD with 2 decimal places (e.g., \"50.00\", \"35.75\")",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "setId": {
                                                        "description": "Set UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "setName": {
                                                        "description": "Set name",
                                                        "type": "string"
                                                    },
                                                    "releaseId": {
                                                        "description": "Release UUID",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of base cards in the set",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "setId",
                                                    "setName",
                                                    "releaseId",
                                                    "releaseName",
                                                    "releaseYear",
                                                    "cardCount"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "parallels",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/segments": {
            "get": {
                "summary": "Segment name autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get segment name suggestions for autocomplete. Returns up to 10 matching segment names sorted alphabetically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/manufacturers": {
            "get": {
                "summary": "Manufacturer name autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get manufacturer name suggestions for autocomplete. Can filter by segment. Returns up to 10 matching manufacturer names sorted alphabetically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "segmentId",
                        "required": false,
                        "description": "Filter manufacturers by segment UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/years": {
            "get": {
                "summary": "Year autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get year suggestions for autocomplete. Can filter by segment and/or manufacturer. Returns up to 10 matching years sorted chronologically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "segmentId",
                        "required": false,
                        "description": "Filter years by segment UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "manufacturerId",
                        "required": false,
                        "description": "Filter years by manufacturer UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/releases": {
            "get": {
                "summary": "Release name autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get release name suggestions for autocomplete. Can filter by segment, manufacturer, and/or year. Returns up to 10 matching release names sorted alphabetically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "segmentId",
                        "required": false,
                        "description": "Filter releases by segment UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "manufacturerId",
                        "required": false,
                        "description": "Filter releases by manufacturer UUID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter releases by year (e.g., \"2023\")"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/sets": {
            "get": {
                "summary": "Set name autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get set name suggestions for autocomplete. Can filter by release, or broader filters like segment, manufacturer, and year. Returns up to 10 matching set names sorted alphabetically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "releaseId",
                        "required": false,
                        "description": "Filter sets by release UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "segmentId",
                        "required": false,
                        "description": "Filter sets by segment UUID (when releaseId not provided)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "manufacturerId",
                        "required": false,
                        "description": "Filter sets by manufacturer UUID (when releaseId not provided)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter sets by year (when releaseId not provided)"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/autocomplete/cards": {
            "get": {
                "summary": "Card name autocomplete",
                "tags": [
                    "Autocomplete"
                ],
                "description": "Get card name suggestions for autocomplete. Can filter by set, release, or broader filters. Returns up to 10 unique card names sorted alphabetically.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 1
                        },
                        "in": "query",
                        "name": "q",
                        "required": true,
                        "description": "Search query string. Minimum 1 character for autocomplete suggestions."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "setId",
                        "required": false,
                        "description": "Filter cards by set UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "releaseId",
                        "required": false,
                        "description": "Filter cards by release UUID (when setId not provided)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "segmentId",
                        "required": false,
                        "description": "Filter cards by segment UUID (for broader search)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "manufacturerId",
                        "required": false,
                        "description": "Filter cards by manufacturer UUID (for broader search)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "year",
                        "required": false,
                        "description": "Filter cards by year (for broader search)"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "suggestions": {
                                            "description": "List of autocomplete suggestions, maximum 10 items, sorted alphabetically",
                                            "maxItems": 10,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "suggestions"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collectors/": {
            "post": {
                "summary": "Create a new collector",
                "tags": [
                    "Collectors"
                ],
                "description": "Create a new collector for the authenticated client",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all collectors",
                "tags": [
                    "Collectors"
                ],
                "description": "Get all collectors for the authenticated client with pagination",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "collectors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collector",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "collectors",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "collectors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collector",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "collectors",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collectors/{collectorId}": {
            "get": {
                "summary": "Get a specific collector",
                "tags": [
                    "Collectors"
                ],
                "description": "Get details of a specific collector by ID",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectorId",
                        "required": true,
                        "description": "Collector UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a collector",
                "tags": [
                    "Collectors"
                ],
                "description": "Update a specific collector by ID",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectorId",
                        "required": true,
                        "description": "Collector UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collector",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collector (e.g., \"Mike\", \"Eric\")",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a collector",
                "tags": [
                    "Collectors"
                ],
                "description": "Delete a specific collector by ID. This will also delete all associated collections.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectorId",
                        "required": true,
                        "description": "Collector UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/": {
            "post": {
                "summary": "Create a new collection",
                "tags": [
                    "Collection Management"
                ],
                "description": "Create a new collection for organizing trading cards.\n\nA collection is a container for organizing cards, similar to a physical binder or box. Each collection belongs to a specific collector and can be customized with:\n- A descriptive name\n- Type designation (personal, wishlist, for_sale, showcase)\n- Privacy settings (public or private)\n- Optional description\n\n**Use Cases:**\n- Organize cards by theme (e.g., \"1990s Rookies\", \"Hall of Famers\")\n- Track different collection goals (wishlist vs owned)\n- Separate cards for sale from personal collection\n- Create showcases of prized cards\n\n**Important Notes:**\n- Collections are isolated by API key (multi-tenant)\n- Each collector can have multiple collections\n- Collection names must be unique per collector",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "collectorId": {
                                        "description": "UUID of the collector who will own this collection",
                                        "type": "string",
                                        "format": "uuid",
                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                    },
                                    "name": {
                                        "description": "Name of the collection",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the collection",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "collectorId"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List all collections",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve a paginated list of all collections across all collectors for your account.\n\n**Query Parameters:**\n- **page**: Page number (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **collectorId**: Filter by specific collector (optional)\n- **type**: Filter by collection type (personal, wishlist, for_sale, showcase)\n- **isPublic**: Filter by privacy setting (true/false)\n\n**Response includes:**\n- Collection metadata (name, type, privacy, dates)\n- Associated collector information\n- Card count per collection\n- Total value estimates (if applicable)\n- Pagination metadata\n\n**Use Cases:**\n- Display all collections in a dashboard\n- Filter collections by type or collector\n- Implement collection browsing with pagination\n- Generate collection statistics\n\n**Performance Notes:**\n- Results are cached for improved performance\n- Large result sets are automatically paginated\n- Only returns collections owned by your API key",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "query",
                        "name": "collectorId",
                        "required": false,
                        "description": "Filter by collector UUID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search by collection name (partial match)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort by"
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "collections": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collection",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "collectorId": {
                                                        "description": "ID of the collector who owns this collection",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the collection",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the collection",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectorId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "collections",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "collections": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collection",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "collectorId": {
                                                        "description": "ID of the collector who owns this collection",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the collection",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the collection",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectorId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "collections",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}": {
            "get": {
                "summary": "Get collection details",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve detailed information about a specific collection.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to retrieve\n\n**Response includes:**\n- Complete collection metadata\n- Collector information\n- Creation and update timestamps\n- Card count and value statistics\n- Collection type and privacy settings\n\n**Security:**\n- Only collections owned by your API key can be accessed\n- Attempting to access another client's collection returns 404\n\n**Use Cases:**\n- Display collection details page\n- Load collection for editing\n- Verify collection settings\n- Get collection statistics",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update collection",
                "tags": [
                    "Collection Management"
                ],
                "description": "Update an existing collection's properties.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to update\n\n**Updatable Fields:**\n- **name**: New collection name (must be unique per collector)\n- **description**: Updated description text\n- **type**: Change collection type (personal, wishlist, for_sale, showcase)\n- **isPublic**: Toggle privacy setting\n\n**Important Notes:**\n- Only the collection owner can update it\n- Collection ID and collector cannot be changed\n- Name must remain unique within the collector's collections\n- Changes are immediately reflected in all queries\n\n**Use Cases:**\n- Rename a collection\n- Change collection visibility\n- Update collection purpose (e.g., personal to for_sale)\n- Add or modify description",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the collection",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the collection",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this collection",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the collection",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the collection",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete collection",
                "tags": [
                    "Collection Management"
                ],
                "description": "Permanently delete a collection and all associated data.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to delete\n\n**\u26a0\ufe0f WARNING:**\n- This action is **irreversible**\n- All cards in the collection will be removed\n- All binders associated with the collection will be deleted\n- Collection statistics and history will be permanently lost\n\n**Security:**\n- Only the collection owner can delete it\n- Returns 404 if collection doesn't exist or belongs to another client\n\n**Response:**\n- 204 No Content on successful deletion\n- No response body is returned\n\n**Use Cases:**\n- Remove obsolete collections\n- Clean up test collections\n- Consolidate multiple collections\n- Account cleanup before deletion",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/breakdown": {
            "get": {
                "summary": "Analyze collection breakdown",
                "tags": [
                    "Collection Management"
                ],
                "description": "Analyze your collection by different dimensions to identify concentration risks and opportunities.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to analyze\n\n**Query Parameters:**\n- **groupBy**: Dimension to analyze (release, year, grade, player, manufacturer)\n- **sortBy**: Sort groups by count, value, roi, or percentage (default: value)\n- **order**: Sort order - asc or desc (default: desc)\n- **page**: Page number for pagination (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **minCount**: Filter groups with minimum card count\n- **minValue**: Filter groups with minimum total value\n\n**Response includes:**\n- **Summary statistics**: Total groups, cards, value, ROI, best performers\n- **Group breakdowns**: Each group with metrics and top cards\n- **Pagination metadata**: For large result sets\n\n**Analysis Dimensions:**\n- **release**: Group by product release (e.g., \"1989 Topps\", \"2023 Prizm\") to see release concentration\n- **year**: Group by release year to see temporal distribution\n- **grade**: Group by grade to analyze condition distribution\n- **player**: Group by player to see player concentration\n- **manufacturer**: Group by card manufacturer\n\n**Metrics per Group:**\n- Card count and unique card count\n- Total and average values\n- Return on investment (ROI)\n- Percentage of total collection\n- Top 5 most valuable cards\n\n**Use Cases:**\n- Identify overconcentration in specific releases or players\n- Find best performing segments by ROI\n- Analyze grade distribution for grading decisions\n- Discover diversification opportunities\n- Portfolio risk assessment",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "release",
                                "year",
                                "grade",
                                "player",
                                "manufacturer"
                            ]
                        },
                        "in": "query",
                        "name": "groupBy",
                        "required": true,
                        "description": "Dimension to group the collection by"
                    },
                    {
                        "schema": {
                            "default": "value",
                            "type": "string",
                            "enum": [
                                "count",
                                "value",
                                "roi",
                                "percentage"
                            ]
                        },
                        "in": "query",
                        "name": "sortBy",
                        "required": false,
                        "description": "Metric to sort groups by"
                    },
                    {
                        "schema": {
                            "default": "desc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 1
                        },
                        "in": "query",
                        "name": "minCount",
                        "required": false,
                        "description": "Minimum card count to include in results"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "minValue",
                        "required": false,
                        "description": "Minimum total value to include in results"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "totalGroups": {
                                                    "description": "Total number of groups",
                                                    "type": "number"
                                                },
                                                "totalCards": {
                                                    "description": "Total number of cards in collection",
                                                    "type": "number"
                                                },
                                                "totalQuantity": {
                                                    "description": "Total quantity including duplicates",
                                                    "type": "number"
                                                },
                                                "totalValue": {
                                                    "description": "Total collection value",
                                                    "type": "string"
                                                },
                                                "totalInvested": {
                                                    "description": "Total amount invested",
                                                    "type": "string"
                                                },
                                                "overallRoi": {
                                                    "description": "Overall ROI percentage",
                                                    "type": "number"
                                                },
                                                "groupedBy": {
                                                    "description": "The dimension used for grouping",
                                                    "type": "string"
                                                },
                                                "mostValuableGroup": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name of most valuable group",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Total value of the group",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "value"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "bestPerformingGroup": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name of best performing group",
                                                            "type": "string"
                                                        },
                                                        "roi": {
                                                            "description": "ROI percentage",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "roi"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            },
                                            "required": [
                                                "totalGroups",
                                                "totalCards",
                                                "totalQuantity",
                                                "groupedBy"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "groupKey": {
                                                        "description": "The grouping key (e.g., set name, year, grade)",
                                                        "type": "string"
                                                    },
                                                    "groupId": {
                                                        "description": "The UUID of the group entity if applicable",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of cards in this group",
                                                        "type": "number"
                                                    },
                                                    "uniqueCardCount": {
                                                        "description": "Number of unique cards (ignoring duplicates)",
                                                        "type": "number"
                                                    },
                                                    "totalQuantity": {
                                                        "description": "Total quantity including duplicates",
                                                        "type": "number"
                                                    },
                                                    "totalBuyPrice": {
                                                        "description": "Total purchase price for cards in group",
                                                        "type": "string"
                                                    },
                                                    "totalCurrentValue": {
                                                        "description": "Total current market value",
                                                        "type": "string"
                                                    },
                                                    "totalSoldPrice": {
                                                        "description": "Total sold price for sold cards",
                                                        "type": "string"
                                                    },
                                                    "averageBuyPrice": {
                                                        "description": "Average purchase price per card",
                                                        "type": "string"
                                                    },
                                                    "averageCurrentValue": {
                                                        "description": "Average current value per card",
                                                        "type": "string"
                                                    },
                                                    "roi": {
                                                        "description": "Return on investment percentage",
                                                        "type": "number"
                                                    },
                                                    "percentageOfCollection": {
                                                        "description": "Percentage this group represents of total collection",
                                                        "type": "number"
                                                    },
                                                    "topCards": {
                                                        "description": "Top 5 most valuable cards in this group",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "cardId": {
                                                                    "description": "Card UUID",
                                                                    "type": "string"
                                                                },
                                                                "cardName": {
                                                                    "description": "Card name",
                                                                    "type": "string"
                                                                },
                                                                "setName": {
                                                                    "description": "Set name",
                                                                    "type": "string"
                                                                },
                                                                "releaseName": {
                                                                    "description": "Release name",
                                                                    "type": "string"
                                                                },
                                                                "releaseYear": {
                                                                    "description": "Release year",
                                                                    "type": "string"
                                                                },
                                                                "buyPrice": {
                                                                    "description": "Purchase price per card",
                                                                    "type": "string"
                                                                },
                                                                "currentValue": {
                                                                    "description": "Current market value per card",
                                                                    "type": "string"
                                                                },
                                                                "quantity": {
                                                                    "description": "Quantity in collection",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "required": [
                                                                "cardId",
                                                                "cardName",
                                                                "setName",
                                                                "releaseName",
                                                                "releaseYear",
                                                                "quantity"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "groupKey",
                                                    "cardCount",
                                                    "uniqueCardCount",
                                                    "totalQuantity",
                                                    "percentageOfCollection"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "total_count": {
                                                    "type": "number"
                                                },
                                                "skip": {
                                                    "type": "number"
                                                },
                                                "take": {
                                                    "type": "number"
                                                },
                                                "page": {
                                                    "type": "number"
                                                },
                                                "pages": {
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "total_count",
                                                "skip",
                                                "take",
                                                "page",
                                                "pages"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "summary",
                                        "groups",
                                        "pagination"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "totalGroups": {
                                                    "description": "Total number of groups",
                                                    "type": "number"
                                                },
                                                "totalCards": {
                                                    "description": "Total number of cards in collection",
                                                    "type": "number"
                                                },
                                                "totalQuantity": {
                                                    "description": "Total quantity including duplicates",
                                                    "type": "number"
                                                },
                                                "totalValue": {
                                                    "description": "Total collection value",
                                                    "type": "string"
                                                },
                                                "totalInvested": {
                                                    "description": "Total amount invested",
                                                    "type": "string"
                                                },
                                                "overallRoi": {
                                                    "description": "Overall ROI percentage",
                                                    "type": "number"
                                                },
                                                "groupedBy": {
                                                    "description": "The dimension used for grouping",
                                                    "type": "string"
                                                },
                                                "mostValuableGroup": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name of most valuable group",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "Total value of the group",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "value"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "bestPerformingGroup": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name of best performing group",
                                                            "type": "string"
                                                        },
                                                        "roi": {
                                                            "description": "ROI percentage",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "roi"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            },
                                            "required": [
                                                "totalGroups",
                                                "totalCards",
                                                "totalQuantity",
                                                "groupedBy"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "groupKey": {
                                                        "description": "The grouping key (e.g., set name, year, grade)",
                                                        "type": "string"
                                                    },
                                                    "groupId": {
                                                        "description": "The UUID of the group entity if applicable",
                                                        "type": "string"
                                                    },
                                                    "cardCount": {
                                                        "description": "Number of cards in this group",
                                                        "type": "number"
                                                    },
                                                    "uniqueCardCount": {
                                                        "description": "Number of unique cards (ignoring duplicates)",
                                                        "type": "number"
                                                    },
                                                    "totalQuantity": {
                                                        "description": "Total quantity including duplicates",
                                                        "type": "number"
                                                    },
                                                    "totalBuyPrice": {
                                                        "description": "Total purchase price for cards in group",
                                                        "type": "string"
                                                    },
                                                    "totalCurrentValue": {
                                                        "description": "Total current market value",
                                                        "type": "string"
                                                    },
                                                    "totalSoldPrice": {
                                                        "description": "Total sold price for sold cards",
                                                        "type": "string"
                                                    },
                                                    "averageBuyPrice": {
                                                        "description": "Average purchase price per card",
                                                        "type": "string"
                                                    },
                                                    "averageCurrentValue": {
                                                        "description": "Average current value per card",
                                                        "type": "string"
                                                    },
                                                    "roi": {
                                                        "description": "Return on investment percentage",
                                                        "type": "number"
                                                    },
                                                    "percentageOfCollection": {
                                                        "description": "Percentage this group represents of total collection",
                                                        "type": "number"
                                                    },
                                                    "topCards": {
                                                        "description": "Top 5 most valuable cards in this group",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "cardId": {
                                                                    "description": "Card UUID",
                                                                    "type": "string"
                                                                },
                                                                "cardName": {
                                                                    "description": "Card name",
                                                                    "type": "string"
                                                                },
                                                                "setName": {
                                                                    "description": "Set name",
                                                                    "type": "string"
                                                                },
                                                                "releaseName": {
                                                                    "description": "Release name",
                                                                    "type": "string"
                                                                },
                                                                "releaseYear": {
                                                                    "description": "Release year",
                                                                    "type": "string"
                                                                },
                                                                "buyPrice": {
                                                                    "description": "Purchase price per card",
                                                                    "type": "string"
                                                                },
                                                                "currentValue": {
                                                                    "description": "Current market value per card",
                                                                    "type": "string"
                                                                },
                                                                "quantity": {
                                                                    "description": "Quantity in collection",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "required": [
                                                                "cardId",
                                                                "cardName",
                                                                "setName",
                                                                "releaseName",
                                                                "releaseYear",
                                                                "quantity"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "groupKey",
                                                    "cardCount",
                                                    "uniqueCardCount",
                                                    "totalQuantity",
                                                    "percentageOfCollection"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "total_count": {
                                                    "type": "number"
                                                },
                                                "skip": {
                                                    "type": "number"
                                                },
                                                "take": {
                                                    "type": "number"
                                                },
                                                "page": {
                                                    "type": "number"
                                                },
                                                "pages": {
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "total_count",
                                                "skip",
                                                "take",
                                                "page",
                                                "pages"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "summary",
                                        "groups",
                                        "pagination"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/analytics": {
            "get": {
                "summary": "Get collection analytics",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve comprehensive analytics about collection performance and composition.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to analyze\n\n**Response includes:**\n\n**Overview:**\n- Total cards, unique cards, and quantities\n- Basic collection composition stats\n\n**Financials:**\n- Total invested (sum of all buy prices)\n- Current market value (based on latest market prices)\n- Total realized gains (profit/loss from sold cards)\n- Total unrealized gains (current value vs buy price for unsold cards)\n- Overall ROI percentage\n- Realized ROI (performance on sold cards only)\n\n**Composition:**\n- Graded vs raw card counts and percentages\n- Cards listed for sale\n- Cards already sold\n\n**Performance:**\n- Average card value\n- Average ROI across portfolio\n- Top gainer by percentage\n- Most valuable card by current market price\n\n**Use Cases:**\n- Portfolio performance dashboard\n- Investment tracking\n- Tax reporting (realized vs unrealized gains)\n- Collection valuation\n- Performance benchmarking",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "overview": {
                                            "type": "object",
                                            "properties": {
                                                "totalCards": {
                                                    "description": "Total number of card entries in collection",
                                                    "type": "number"
                                                },
                                                "uniqueCards": {
                                                    "description": "Number of unique cards (ignoring duplicates)",
                                                    "type": "number"
                                                },
                                                "totalQuantity": {
                                                    "description": "Total quantity including all duplicates",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "totalCards",
                                                "uniqueCards",
                                                "totalQuantity"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "financials": {
                                            "type": "object",
                                            "properties": {
                                                "totalInvested": {
                                                    "description": "Total amount invested (sum of buy prices)",
                                                    "type": "string"
                                                },
                                                "currentMarketValue": {
                                                    "description": "Current total market value",
                                                    "type": "string"
                                                },
                                                "totalRealizedGains": {
                                                    "description": "Total gains from sold cards",
                                                    "type": "string"
                                                },
                                                "totalUnrealizedGains": {
                                                    "description": "Unrealized gains on unsold cards",
                                                    "type": "string"
                                                },
                                                "overallROI": {
                                                    "description": "Overall return on investment percentage",
                                                    "type": "number"
                                                },
                                                "realizedROI": {
                                                    "description": "ROI on sold cards only",
                                                    "type": "number"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "composition": {
                                            "type": "object",
                                            "properties": {
                                                "gradedCount": {
                                                    "description": "Number of graded cards",
                                                    "type": "number"
                                                },
                                                "rawCount": {
                                                    "description": "Number of raw (ungraded) cards",
                                                    "type": "number"
                                                },
                                                "gradedPercentage": {
                                                    "description": "Percentage of collection that is graded",
                                                    "type": "number"
                                                },
                                                "forSaleCount": {
                                                    "description": "Number of cards listed for sale",
                                                    "type": "number"
                                                },
                                                "soldCount": {
                                                    "description": "Number of cards that have been sold",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "gradedCount",
                                                "rawCount",
                                                "gradedPercentage",
                                                "forSaleCount",
                                                "soldCount"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "performance": {
                                            "type": "object",
                                            "properties": {
                                                "averageCardValue": {
                                                    "description": "Average current value per card",
                                                    "type": "string"
                                                },
                                                "averageROI": {
                                                    "description": "Average ROI across all cards with buy prices",
                                                    "type": "number"
                                                },
                                                "topGainer": {
                                                    "description": "Card with highest percentage gain",
                                                    "type": "object",
                                                    "properties": {
                                                        "cardId": {
                                                            "description": "Card UUID",
                                                            "type": "string"
                                                        },
                                                        "cardName": {
                                                            "description": "Card name",
                                                            "type": "string"
                                                        },
                                                        "releaseName": {
                                                            "description": "Release name",
                                                            "type": "string"
                                                        },
                                                        "releaseYear": {
                                                            "description": "Release year",
                                                            "type": "string"
                                                        },
                                                        "buyPrice": {
                                                            "description": "Purchase price",
                                                            "type": "string"
                                                        },
                                                        "currentValue": {
                                                            "description": "Current market value",
                                                            "type": "string"
                                                        },
                                                        "gain": {
                                                            "description": "Dollar gain amount",
                                                            "type": "string"
                                                        },
                                                        "gainPercentage": {
                                                            "description": "Percentage gain",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "cardId",
                                                        "cardName",
                                                        "releaseName",
                                                        "releaseYear",
                                                        "buyPrice",
                                                        "currentValue",
                                                        "gain",
                                                        "gainPercentage"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "topValue": {
                                                    "description": "Most valuable card by current market price",
                                                    "type": "object",
                                                    "properties": {
                                                        "cardId": {
                                                            "description": "Card UUID",
                                                            "type": "string"
                                                        },
                                                        "cardName": {
                                                            "description": "Card name",
                                                            "type": "string"
                                                        },
                                                        "releaseName": {
                                                            "description": "Release name",
                                                            "type": "string"
                                                        },
                                                        "releaseYear": {
                                                            "description": "Release year",
                                                            "type": "string"
                                                        },
                                                        "currentValue": {
                                                            "description": "Current market value",
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "description": "Quantity owned",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "cardId",
                                                        "cardName",
                                                        "releaseName",
                                                        "releaseYear",
                                                        "currentValue",
                                                        "quantity"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "overview",
                                        "financials",
                                        "composition",
                                        "performance"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "overview": {
                                            "type": "object",
                                            "properties": {
                                                "totalCards": {
                                                    "description": "Total number of card entries in collection",
                                                    "type": "number"
                                                },
                                                "uniqueCards": {
                                                    "description": "Number of unique cards (ignoring duplicates)",
                                                    "type": "number"
                                                },
                                                "totalQuantity": {
                                                    "description": "Total quantity including all duplicates",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "totalCards",
                                                "uniqueCards",
                                                "totalQuantity"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "financials": {
                                            "type": "object",
                                            "properties": {
                                                "totalInvested": {
                                                    "description": "Total amount invested (sum of buy prices)",
                                                    "type": "string"
                                                },
                                                "currentMarketValue": {
                                                    "description": "Current total market value",
                                                    "type": "string"
                                                },
                                                "totalRealizedGains": {
                                                    "description": "Total gains from sold cards",
                                                    "type": "string"
                                                },
                                                "totalUnrealizedGains": {
                                                    "description": "Unrealized gains on unsold cards",
                                                    "type": "string"
                                                },
                                                "overallROI": {
                                                    "description": "Overall return on investment percentage",
                                                    "type": "number"
                                                },
                                                "realizedROI": {
                                                    "description": "ROI on sold cards only",
                                                    "type": "number"
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "composition": {
                                            "type": "object",
                                            "properties": {
                                                "gradedCount": {
                                                    "description": "Number of graded cards",
                                                    "type": "number"
                                                },
                                                "rawCount": {
                                                    "description": "Number of raw (ungraded) cards",
                                                    "type": "number"
                                                },
                                                "gradedPercentage": {
                                                    "description": "Percentage of collection that is graded",
                                                    "type": "number"
                                                },
                                                "forSaleCount": {
                                                    "description": "Number of cards listed for sale",
                                                    "type": "number"
                                                },
                                                "soldCount": {
                                                    "description": "Number of cards that have been sold",
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "gradedCount",
                                                "rawCount",
                                                "gradedPercentage",
                                                "forSaleCount",
                                                "soldCount"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "performance": {
                                            "type": "object",
                                            "properties": {
                                                "averageCardValue": {
                                                    "description": "Average current value per card",
                                                    "type": "string"
                                                },
                                                "averageROI": {
                                                    "description": "Average ROI across all cards with buy prices",
                                                    "type": "number"
                                                },
                                                "topGainer": {
                                                    "description": "Card with highest percentage gain",
                                                    "type": "object",
                                                    "properties": {
                                                        "cardId": {
                                                            "description": "Card UUID",
                                                            "type": "string"
                                                        },
                                                        "cardName": {
                                                            "description": "Card name",
                                                            "type": "string"
                                                        },
                                                        "releaseName": {
                                                            "description": "Release name",
                                                            "type": "string"
                                                        },
                                                        "releaseYear": {
                                                            "description": "Release year",
                                                            "type": "string"
                                                        },
                                                        "buyPrice": {
                                                            "description": "Purchase price",
                                                            "type": "string"
                                                        },
                                                        "currentValue": {
                                                            "description": "Current market value",
                                                            "type": "string"
                                                        },
                                                        "gain": {
                                                            "description": "Dollar gain amount",
                                                            "type": "string"
                                                        },
                                                        "gainPercentage": {
                                                            "description": "Percentage gain",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "cardId",
                                                        "cardName",
                                                        "releaseName",
                                                        "releaseYear",
                                                        "buyPrice",
                                                        "currentValue",
                                                        "gain",
                                                        "gainPercentage"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "topValue": {
                                                    "description": "Most valuable card by current market price",
                                                    "type": "object",
                                                    "properties": {
                                                        "cardId": {
                                                            "description": "Card UUID",
                                                            "type": "string"
                                                        },
                                                        "cardName": {
                                                            "description": "Card name",
                                                            "type": "string"
                                                        },
                                                        "releaseName": {
                                                            "description": "Release name",
                                                            "type": "string"
                                                        },
                                                        "releaseYear": {
                                                            "description": "Release year",
                                                            "type": "string"
                                                        },
                                                        "currentValue": {
                                                            "description": "Current market value",
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "description": "Quantity owned",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "cardId",
                                                        "cardName",
                                                        "releaseName",
                                                        "releaseYear",
                                                        "currentValue",
                                                        "quantity"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "overview",
                                        "financials",
                                        "composition",
                                        "performance"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/set-progress": {
            "get": {
                "summary": "Track set completion progress",
                "tags": [
                    "Collection Management"
                ],
                "description": "Track progress toward completing sets within your collection to focus acquisition efforts.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to analyze\n\n**Query Parameters:**\n- **sortBy**: Sort sets by completion, missing, cost, or difficulty (default: completion)\n- **order**: Sort order - asc or desc (default: desc)\n- **page**: Page number for pagination (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **minCompletion**: Filter sets with minimum completion percentage (0-100)\n- **nearComplete**: Filter for sets >80% complete (boolean)\n\n**Response includes:**\n\n**Summary statistics:**\n- Total sets represented in collection\n- Number of near-complete sets (>80%)\n- Number of fully complete sets (100%)\n- Total estimated cost to complete all sets\n\n**Per Set:**\n- Set name, release name, and release year for context\n- Total cards in set vs owned cards\n- Completion percentage\n- Missing card UUIDs (only included for sets >= 85% complete; empty array otherwise)\n- Estimated cost to complete (based on raw card market prices)\n- Difficulty score (based on card availability)\n\n**Use Cases:**\n- Identify which sets are close to completion\n- Calculate cost to complete specific sets\n- Focus buying decisions on near-complete sets\n- Track collection completion goals\n- Discover sets worth completing for investment\n\n**Important Notes:**\n- Only base cards are considered (parallels excluded)\n- Estimated costs based on raw (ungraded) card prices\n- Missing card UUIDs only returned for sets >= 85% complete (to avoid multi-thousand line responses)\n- For sets < 85% complete, use totalCards - ownedCards to get missing count\n- Sorted by completion percentage (highest first) by default",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "default": "completion",
                            "type": "string",
                            "enum": [
                                "completion",
                                "missing",
                                "cost",
                                "difficulty"
                            ]
                        },
                        "in": "query",
                        "name": "sortBy",
                        "required": false,
                        "description": "Metric to sort sets by"
                    },
                    {
                        "schema": {
                            "default": "desc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                        },
                        "in": "query",
                        "name": "minCompletion",
                        "required": false,
                        "description": "Filter sets with minimum completion percentage"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "name": "nearComplete",
                        "required": false,
                        "description": "Filter for sets >80% complete"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "totalSets": {
                                                    "description": "Total number of sets represented in collection",
                                                    "type": "number"
                                                },
                                                "nearCompleteSets": {
                                                    "description": "Number of sets >80% complete",
                                                    "type": "number"
                                                },
                                                "fullyCompleteSets": {
                                                    "description": "Number of fully complete sets",
                                                    "type": "number"
                                                },
                                                "totalEstimatedCost": {
                                                    "description": "Total cost to complete all sets",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totalSets",
                                                "nearCompleteSets",
                                                "fullyCompleteSets"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "sets": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "setId": {
                                                        "description": "Set UUID",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Set name",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    },
                                                    "totalCards": {
                                                        "description": "Total number of cards in set",
                                                        "type": "number"
                                                    },
                                                    "ownedCards": {
                                                        "description": "Number of unique cards owned",
                                                        "type": "number"
                                                    },
                                                    "missingCards": {
                                                        "description": "Array of missing card UUIDs",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "completionPercentage": {
                                                        "description": "Percentage complete (0-100)",
                                                        "type": "number"
                                                    },
                                                    "estimatedCostToComplete": {
                                                        "description": "Estimated cost to acquire missing cards",
                                                        "type": "string"
                                                    },
                                                    "difficultyScore": {
                                                        "description": "Difficulty score based on card availability (0-100)",
                                                        "type": "number"
                                                    },
                                                    "averageCardValue": {
                                                        "description": "Average value per card in set",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "setId",
                                                    "setName",
                                                    "releaseName",
                                                    "releaseYear",
                                                    "totalCards",
                                                    "ownedCards",
                                                    "missingCards",
                                                    "completionPercentage"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "description": "Total number of sets matching filters",
                                            "type": "number"
                                        },
                                        "skip": {
                                            "description": "Number of records skipped",
                                            "type": "number"
                                        },
                                        "take": {
                                            "description": "Number of records returned",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "summary",
                                        "sets",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "totalSets": {
                                                    "description": "Total number of sets represented in collection",
                                                    "type": "number"
                                                },
                                                "nearCompleteSets": {
                                                    "description": "Number of sets >80% complete",
                                                    "type": "number"
                                                },
                                                "fullyCompleteSets": {
                                                    "description": "Number of fully complete sets",
                                                    "type": "number"
                                                },
                                                "totalEstimatedCost": {
                                                    "description": "Total cost to complete all sets",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "totalSets",
                                                "nearCompleteSets",
                                                "fullyCompleteSets"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "sets": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "setId": {
                                                        "description": "Set UUID",
                                                        "type": "string"
                                                    },
                                                    "setName": {
                                                        "description": "Set name",
                                                        "type": "string"
                                                    },
                                                    "releaseName": {
                                                        "description": "Release name",
                                                        "type": "string"
                                                    },
                                                    "releaseYear": {
                                                        "description": "Release year",
                                                        "type": "string"
                                                    },
                                                    "totalCards": {
                                                        "description": "Total number of cards in set",
                                                        "type": "number"
                                                    },
                                                    "ownedCards": {
                                                        "description": "Number of unique cards owned",
                                                        "type": "number"
                                                    },
                                                    "missingCards": {
                                                        "description": "Array of missing card UUIDs",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "completionPercentage": {
                                                        "description": "Percentage complete (0-100)",
                                                        "type": "number"
                                                    },
                                                    "estimatedCostToComplete": {
                                                        "description": "Estimated cost to acquire missing cards",
                                                        "type": "string"
                                                    },
                                                    "difficultyScore": {
                                                        "description": "Difficulty score based on card availability (0-100)",
                                                        "type": "number"
                                                    },
                                                    "averageCardValue": {
                                                        "description": "Average value per card in set",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "setId",
                                                    "setName",
                                                    "releaseName",
                                                    "releaseYear",
                                                    "totalCards",
                                                    "ownedCards",
                                                    "missingCards",
                                                    "completionPercentage"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "description": "Total number of sets matching filters",
                                            "type": "number"
                                        },
                                        "skip": {
                                            "description": "Number of records skipped",
                                            "type": "number"
                                        },
                                        "take": {
                                            "description": "Number of records returned",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "summary",
                                        "sets",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/set-progress/{setId}": {
            "get": {
                "summary": "Get completion progress for specific set",
                "tags": [
                    "Collection Management"
                ],
                "description": "Get detailed completion progress for a specific set within your collection.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection\n- **setId**: UUID of the set to check progress for\n\n**Response includes:**\n- Set name, release name, and release year\n- Total cards in set vs owned cards\n- Completion percentage (0-100)\n- Array of missing card UUIDs\n- Estimated cost to complete set\n- Difficulty score (based on card availability)\n- Average card value for the set\n\n**Use Cases:**\n- Check progress on a specific set\n- Get list of missing cards for targeted purchasing\n- Calculate exact cost to complete a set\n- Track progress toward set completion goal\n- Identify which cards are still needed\n\n**Important Notes:**\n- Only base cards are considered (parallels excluded)\n- Estimated cost based on raw (ungraded) card prices\n- Missing cards returned as UUIDs for easy card lookup\n- Returns 404 if set is not represented in collection",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "setId",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "setId": {
                                            "description": "Set UUID",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Set name",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Release name",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Release year",
                                            "type": "string"
                                        },
                                        "totalCards": {
                                            "description": "Total number of cards in set",
                                            "type": "number"
                                        },
                                        "ownedCards": {
                                            "description": "Number of unique cards owned",
                                            "type": "number"
                                        },
                                        "missingCards": {
                                            "description": "Array of missing card UUIDs",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "completionPercentage": {
                                            "description": "Percentage complete (0-100)",
                                            "type": "number"
                                        },
                                        "estimatedCostToComplete": {
                                            "description": "Estimated cost to acquire missing cards",
                                            "type": "string"
                                        },
                                        "difficultyScore": {
                                            "description": "Difficulty score based on card availability (0-100)",
                                            "type": "number"
                                        },
                                        "averageCardValue": {
                                            "description": "Average value per card in set",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "setId",
                                        "setName",
                                        "releaseName",
                                        "releaseYear",
                                        "totalCards",
                                        "ownedCards",
                                        "missingCards",
                                        "completionPercentage"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "setId": {
                                            "description": "Set UUID",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Set name",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Release name",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Release year",
                                            "type": "string"
                                        },
                                        "totalCards": {
                                            "description": "Total number of cards in set",
                                            "type": "number"
                                        },
                                        "ownedCards": {
                                            "description": "Number of unique cards owned",
                                            "type": "number"
                                        },
                                        "missingCards": {
                                            "description": "Array of missing card UUIDs",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "completionPercentage": {
                                            "description": "Percentage complete (0-100)",
                                            "type": "number"
                                        },
                                        "estimatedCostToComplete": {
                                            "description": "Estimated cost to acquire missing cards",
                                            "type": "string"
                                        },
                                        "difficultyScore": {
                                            "description": "Difficulty score based on card availability (0-100)",
                                            "type": "number"
                                        },
                                        "averageCardValue": {
                                            "description": "Average value per card in set",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "setId",
                                        "setName",
                                        "releaseName",
                                        "releaseYear",
                                        "totalCards",
                                        "ownedCards",
                                        "missingCards",
                                        "completionPercentage"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/set-progress/{setId}/{parallelId}": {
            "get": {
                "summary": "Track parallel completion within a set",
                "tags": [
                    "Collection Management"
                ],
                "description": "Track progress toward completing a specific parallel variant within a set.\n\nThis endpoint tracks completion for a specific parallel (e.g., all Refractors, all Gold parallels) within a set. Unlike the base set progress endpoint which counts any parallel as complete, this endpoint only counts cards where you own the specific parallel variant.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection to analyze\n- **setId**: UUID of the set to check progress for\n- **parallelId**: UUID of the specific parallel variant (e.g., Refractor, Gold, Silver, Prizm, etc.)\n\n**Response includes:**\n- Set name, release name, and release year for context\n- Parallel name (e.g., \"Refractor\", \"Gold Prizm\")\n- Total cards in set vs owned cards of this specific parallel\n- Completion percentage for this parallel variant (0-100)\n- Array of missing card UUIDs for this parallel (for targeted buying)\n- Estimated cost to complete this parallel variant (based on raw card prices)\n- Average card value for this parallel\n\n**How it differs from base set progress:**\n- **Base set progress** (/set-progress/:setId): Counts card #5 as owned if you have ANY parallel (base, refractor, gold, etc.)\n- **Parallel set progress** (this endpoint): Only counts card #5 if you own it as THIS specific parallel\n\n**Use Cases:**\n- Track completion of premium parallel sets (Refractors, numbered parallels)\n- Calculate exact cost to complete a specific parallel run\n- Focus buying decisions on specific parallel variants\n- Chase rare parallel variations (e.g., Gold /10, Orange /25)\n- Investment tracking for high-value parallels\n- Set collection goals for parallel variants\n\n**Example Scenario:**\nYou're collecting all Refractor parallels from 2023 Prizm Basketball Base Set. You own 187 of 250 Refractors. This endpoint returns:\n- 74.8% complete\n- List of 63 missing Refractor card UUIDs\n- Estimated $1,247.50 to complete the Refractor parallel set\n\n**Important Notes:**\n- Only base cards are considered (card variations where baseCardId IS NOT NULL are excluded)\n- Filters collection_cards by the specific parallelId provided\n- Estimated costs are based on raw (ungraded) card prices for this parallel\n- Returns 404 if parallel doesn't belong to the specified set\n- Missing cards are returned as UUIDs for easy lookup via the catalog API",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "setId",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "parallelId",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "setId": {
                                            "description": "Set UUID",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Set name",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Release name",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Release year",
                                            "type": "string"
                                        },
                                        "parallelId": {
                                            "description": "Parallel UUID",
                                            "type": "string"
                                        },
                                        "parallelName": {
                                            "description": "Parallel name (e.g., Refractor, Gold)",
                                            "type": "string"
                                        },
                                        "totalCards": {
                                            "description": "Total number of cards in set",
                                            "type": "number"
                                        },
                                        "ownedCards": {
                                            "description": "Number of this parallel owned",
                                            "type": "number"
                                        },
                                        "missingCards": {
                                            "description": "Array of missing card UUIDs for this parallel",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "completionPercentage": {
                                            "description": "Percentage complete for this parallel (0-100)",
                                            "type": "number"
                                        },
                                        "estimatedCostToComplete": {
                                            "description": "Estimated cost to acquire missing cards of this parallel",
                                            "type": "string"
                                        },
                                        "averageCardValue": {
                                            "description": "Average value per card for this parallel",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "setId",
                                        "setName",
                                        "releaseName",
                                        "releaseYear",
                                        "parallelId",
                                        "parallelName",
                                        "totalCards",
                                        "ownedCards",
                                        "missingCards",
                                        "completionPercentage"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "setId": {
                                            "description": "Set UUID",
                                            "type": "string"
                                        },
                                        "setName": {
                                            "description": "Set name",
                                            "type": "string"
                                        },
                                        "releaseName": {
                                            "description": "Release name",
                                            "type": "string"
                                        },
                                        "releaseYear": {
                                            "description": "Release year",
                                            "type": "string"
                                        },
                                        "parallelId": {
                                            "description": "Parallel UUID",
                                            "type": "string"
                                        },
                                        "parallelName": {
                                            "description": "Parallel name (e.g., Refractor, Gold)",
                                            "type": "string"
                                        },
                                        "totalCards": {
                                            "description": "Total number of cards in set",
                                            "type": "number"
                                        },
                                        "ownedCards": {
                                            "description": "Number of this parallel owned",
                                            "type": "number"
                                        },
                                        "missingCards": {
                                            "description": "Array of missing card UUIDs for this parallel",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "completionPercentage": {
                                            "description": "Percentage complete for this parallel (0-100)",
                                            "type": "number"
                                        },
                                        "estimatedCostToComplete": {
                                            "description": "Estimated cost to acquire missing cards of this parallel",
                                            "type": "string"
                                        },
                                        "averageCardValue": {
                                            "description": "Average value per card for this parallel",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "setId",
                                        "setName",
                                        "releaseName",
                                        "releaseYear",
                                        "parallelId",
                                        "parallelName",
                                        "totalCards",
                                        "ownedCards",
                                        "missingCards",
                                        "completionPercentage"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/cards": {
            "post": {
                "summary": "Add cards to collection",
                "tags": [
                    "Collection Management"
                ],
                "description": "Add one or multiple cards to a collection with detailed tracking information.\n\n**Supports two modes:**\n1. **Single Card**: Add one card with all metadata\n2. **Batch Mode**: Add up to 100 cards in a single request\n\n**Card Metadata (all optional):**\n- **quantity**: Number of copies (default: 1)\n- **grade**: Professional grading (e.g., \"PSA 10\", \"BGS 9.5\")\n- **gradeCompany**: Grading service (PSA, BGS, SGC, etc.)\n- **purchasePrice**: What you paid for the card\n- **purchaseDate**: When you acquired it\n- **purchaseFrom**: Where/who you bought it from\n- **currentValue**: Current market value estimate\n- **condition**: Raw condition if ungraded (Mint, Near Mint, etc.)\n- **notes**: Personal notes about the card\n- **isForSale**: Mark card as available for sale\n- **salePrice**: Asking price if for sale\n\n**Batch Operation:**\n- Use 'cards' array instead of single card fields\n- Mixed success/failure responses possible\n- Returns detailed results for each card\n\n**Use Cases:**\n- Track new acquisitions\n- Import bulk collections\n- Record graded cards\n- Build want lists\n- Track investment portfolio",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "cardId": {
                                                "description": "UUID of the card to add to the collection",
                                                "type": "string",
                                                "format": "uuid",
                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                            },
                                            "parallelId": {
                                                "description": "UUID of the card parallel if applicable",
                                                "type": "string",
                                                "format": "uuid",
                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                            },
                                            "gradeId": {
                                                "description": "UUID of the grade if card is graded",
                                                "type": "string",
                                                "format": "uuid",
                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                            },
                                            "quantity": {
                                                "description": "Quantity of this card to add",
                                                "default": 1,
                                                "type": "number",
                                                "minimum": 1
                                            },
                                            "buyPrice": {
                                                "description": "Purchase price (numeric string with up to 2 decimal places)",
                                                "type": "string"
                                            },
                                            "buyDate": {
                                                "description": "Purchase date in YYYY-MM-DD format",
                                                "type": "string",
                                                "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                            },
                                            "sellPrice": {
                                                "description": "Listed selling price (numeric string with up to 2 decimal places)",
                                                "type": "string"
                                            },
                                            "soldPrice": {
                                                "description": "Actual sold price (numeric string with up to 2 decimal places)",
                                                "type": "string"
                                            },
                                            "soldDate": {
                                                "description": "Sale date in YYYY-MM-DD format",
                                                "type": "string",
                                                "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                            }
                                        },
                                        "required": [
                                            "cardId"
                                        ]
                                    },
                                    {
                                        "description": "Batch of cards to add (max 100)",
                                        "minItems": 1,
                                        "maxItems": 100,
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "cardId": {
                                                    "description": "UUID of the card to add to the collection",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "parallelId": {
                                                    "description": "UUID of the card parallel if applicable",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradeId": {
                                                    "description": "UUID of the grade if card is graded",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "quantity": {
                                                    "description": "Quantity of this card to add",
                                                    "default": 1,
                                                    "type": "number",
                                                    "minimum": 1
                                                },
                                                "buyPrice": {
                                                    "description": "Purchase price (numeric string with up to 2 decimal places)",
                                                    "type": "string"
                                                },
                                                "buyDate": {
                                                    "description": "Purchase date in YYYY-MM-DD format",
                                                    "type": "string",
                                                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                                },
                                                "sellPrice": {
                                                    "description": "Listed selling price (numeric string with up to 2 decimal places)",
                                                    "type": "string"
                                                },
                                                "soldPrice": {
                                                    "description": "Actual sold price (numeric string with up to 2 decimal places)",
                                                    "type": "string"
                                                },
                                                "soldDate": {
                                                    "description": "Sale date in YYYY-MM-DD format",
                                                    "type": "string",
                                                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                                }
                                            },
                                            "required": [
                                                "cardId"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Single card or batch response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Single card or batch response",
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "description": "Unique identifier for the collection card",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "collectionId": {
                                                    "description": "ID of the collection this card belongs to",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "cardId": {
                                                    "description": "ID of the card",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "parallelId": {
                                                    "description": "ID of the card parallel if applicable",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradeId": {
                                                    "description": "UUID of the grade if card is graded",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "quantity": {
                                                    "description": "Quantity of this card in the collection",
                                                    "default": 1,
                                                    "type": "number",
                                                    "minimum": 1
                                                },
                                                "buyPrice": {
                                                    "description": "Purchase price of the card",
                                                    "type": "string"
                                                },
                                                "buyDate": {
                                                    "description": "Date the card was purchased (YYYY-MM-DD)",
                                                    "type": "string"
                                                },
                                                "sellPrice": {
                                                    "description": "Listed selling price of the card",
                                                    "type": "string"
                                                },
                                                "soldPrice": {
                                                    "description": "Actual sold price of the card",
                                                    "type": "string"
                                                },
                                                "soldDate": {
                                                    "description": "Date the card was sold (YYYY-MM-DD)",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "collectionId",
                                                "cardId",
                                                "quantity"
                                            ],
                                            "additionalProperties": false
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "cards": {
                                                    "description": "Successfully created cards",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Unique identifier for the collection card",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "collectionId": {
                                                                "description": "ID of the collection this card belongs to",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "cardId": {
                                                                "description": "ID of the card",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "parallelId": {
                                                                "description": "ID of the card parallel if applicable",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "gradeId": {
                                                                "description": "UUID of the grade if card is graded",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "quantity": {
                                                                "description": "Quantity of this card in the collection",
                                                                "default": 1,
                                                                "type": "number",
                                                                "minimum": 1
                                                            },
                                                            "buyPrice": {
                                                                "description": "Purchase price of the card",
                                                                "type": "string"
                                                            },
                                                            "buyDate": {
                                                                "description": "Date the card was purchased (YYYY-MM-DD)",
                                                                "type": "string"
                                                            },
                                                            "sellPrice": {
                                                                "description": "Listed selling price of the card",
                                                                "type": "string"
                                                            },
                                                            "soldPrice": {
                                                                "description": "Actual sold price of the card",
                                                                "type": "string"
                                                            },
                                                            "soldDate": {
                                                                "description": "Date the card was sold (YYYY-MM-DD)",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "collectionId",
                                                            "cardId",
                                                            "quantity"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "errors": {
                                                    "description": "Any errors that occurred during batch creation",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "index": {
                                                                "description": "Index of the failed item in the request array",
                                                                "type": "number"
                                                            },
                                                            "cardId": {
                                                                "description": "Card ID that failed",
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                            },
                                                            "error": {
                                                                "description": "Error message",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "index",
                                                            "cardId",
                                                            "error"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                }
                                            },
                                            "required": [
                                                "cards"
                                            ],
                                            "additionalProperties": false
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List collection cards",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve a paginated list of all cards in a specific collection with advanced filtering options.\n\n**Query Parameters:**\n- **page**: Page number (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **sortBy**: Sort field (name, number, value, purchaseDate, addedDate)\n- **sortOrder**: asc or desc (default: asc)\n- **search**: Search card names and descriptions\n- **binderId**: Filter by specific binder\n- **graded**: Filter graded cards only (true/false)\n- **forSale**: Filter cards marked for sale\n- **minValue**: Minimum current value filter\n- **maxValue**: Maximum current value filter\n\n**Response includes:**\n- Full card catalog details (name, set, year, etc.)\n- Collection-specific metadata (quantity, grade, purchase info)\n- Current market values\n- Aggregated statistics (total value, card count)\n- Pagination metadata\n\n**Use Cases:**\n- Browse collection inventory\n- Search for specific cards\n- Filter high-value cards\n- Export collection data\n- Generate collection reports",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "query",
                        "name": "cardId",
                        "required": false,
                        "description": "Filter by card UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "query",
                        "name": "parallelId",
                        "required": false,
                        "description": "Filter by parallel UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "query",
                        "name": "gradeId",
                        "required": false,
                        "description": "Filter by grade UUID"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "name": "hasSold",
                        "required": false,
                        "description": "Filter by sold status (true for sold, false for not sold)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "buyDate",
                                "soldDate",
                                "buyPrice",
                                "soldPrice"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort by"
                    },
                    {
                        "schema": {
                            "default": "desc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collection card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionId": {
                                                        "description": "ID of the collection this card belongs to",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "cardId": {
                                                        "description": "ID of the card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "parallelId": {
                                                        "description": "ID of the card parallel if applicable",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradeId": {
                                                        "description": "UUID of the grade if card is graded",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity of this card in the collection",
                                                        "default": 1,
                                                        "type": "number",
                                                        "minimum": 1
                                                    },
                                                    "buyPrice": {
                                                        "description": "Purchase price of the card",
                                                        "type": "string"
                                                    },
                                                    "buyDate": {
                                                        "description": "Date the card was purchased (YYYY-MM-DD)",
                                                        "type": "string"
                                                    },
                                                    "sellPrice": {
                                                        "description": "Listed selling price of the card",
                                                        "type": "string"
                                                    },
                                                    "soldPrice": {
                                                        "description": "Actual sold price of the card",
                                                        "type": "string"
                                                    },
                                                    "soldDate": {
                                                        "description": "Date the card was sold (YYYY-MM-DD)",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectionId",
                                                    "cardId",
                                                    "quantity"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the collection card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionId": {
                                                        "description": "ID of the collection this card belongs to",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "cardId": {
                                                        "description": "ID of the card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "parallelId": {
                                                        "description": "ID of the card parallel if applicable",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradeId": {
                                                        "description": "UUID of the grade if card is graded",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity of this card in the collection",
                                                        "default": 1,
                                                        "type": "number",
                                                        "minimum": 1
                                                    },
                                                    "buyPrice": {
                                                        "description": "Purchase price of the card",
                                                        "type": "string"
                                                    },
                                                    "buyDate": {
                                                        "description": "Date the card was purchased (YYYY-MM-DD)",
                                                        "type": "string"
                                                    },
                                                    "sellPrice": {
                                                        "description": "Listed selling price of the card",
                                                        "type": "string"
                                                    },
                                                    "soldPrice": {
                                                        "description": "Actual sold price of the card",
                                                        "type": "string"
                                                    },
                                                    "soldDate": {
                                                        "description": "Date the card was sold (YYYY-MM-DD)",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectionId",
                                                    "cardId",
                                                    "quantity"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/cards/{cardId}": {
            "get": {
                "summary": "Get card details",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve complete details for a specific card in a collection.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection\n- **cardId**: UUID of the collection card entry (not the catalog card ID)\n\n**Response includes:**\n- Complete catalog card information\n- All collection-specific metadata\n- Purchase and sale information\n- Grading details if applicable\n- Current market value\n- Historical price data (if available)\n- Personal notes\n\n**Use Cases:**\n- View full card details\n- Check card value and grade\n- Review purchase history\n- Prepare for sale listing",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this card belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "cardId": {
                                            "description": "ID of the card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "parallelId": {
                                            "description": "ID of the card parallel if applicable",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "gradeId": {
                                            "description": "UUID of the grade if card is graded",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "quantity": {
                                            "description": "Quantity of this card in the collection",
                                            "default": 1,
                                            "type": "number",
                                            "minimum": 1
                                        },
                                        "buyPrice": {
                                            "description": "Purchase price of the card",
                                            "type": "string"
                                        },
                                        "buyDate": {
                                            "description": "Date the card was purchased (YYYY-MM-DD)",
                                            "type": "string"
                                        },
                                        "sellPrice": {
                                            "description": "Listed selling price of the card",
                                            "type": "string"
                                        },
                                        "soldPrice": {
                                            "description": "Actual sold price of the card",
                                            "type": "string"
                                        },
                                        "soldDate": {
                                            "description": "Date the card was sold (YYYY-MM-DD)",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId",
                                        "cardId",
                                        "quantity"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this card belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "cardId": {
                                            "description": "ID of the card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "parallelId": {
                                            "description": "ID of the card parallel if applicable",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "gradeId": {
                                            "description": "UUID of the grade if card is graded",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "quantity": {
                                            "description": "Quantity of this card in the collection",
                                            "default": 1,
                                            "type": "number",
                                            "minimum": 1
                                        },
                                        "buyPrice": {
                                            "description": "Purchase price of the card",
                                            "type": "string"
                                        },
                                        "buyDate": {
                                            "description": "Date the card was purchased (YYYY-MM-DD)",
                                            "type": "string"
                                        },
                                        "sellPrice": {
                                            "description": "Listed selling price of the card",
                                            "type": "string"
                                        },
                                        "soldPrice": {
                                            "description": "Actual sold price of the card",
                                            "type": "string"
                                        },
                                        "soldDate": {
                                            "description": "Date the card was sold (YYYY-MM-DD)",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId",
                                        "cardId",
                                        "quantity"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update card metadata",
                "tags": [
                    "Collection Management"
                ],
                "description": "Update collection-specific metadata for a card.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection\n- **cardId**: UUID of the collection card entry\n\n**Updatable Fields:**\n- **quantity**: Adjust number of copies\n- **grade**: Update or add grading info\n- **gradeCompany**: Change grading service\n- **purchasePrice**: Correct purchase price\n- **purchaseDate**: Fix acquisition date\n- **purchaseFrom**: Update source information\n- **currentValue**: Update market value estimate\n- **condition**: Change raw condition assessment\n- **notes**: Modify personal notes\n- **isForSale**: Toggle sale status\n- **salePrice**: Update asking price\n- **binderId**: Move to different binder\n\n**Important Notes:**\n- Cannot change the catalog card reference\n- Updates are immediate\n- Previous values are not retained (no history)\n- Only the collection owner can update\n\n**Use Cases:**\n- Update card after grading\n- Adjust quantities after sales\n- Update market values\n- Add or modify notes\n- Change sale status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parallelId": {
                                        "description": "UUID of the card parallel (null to remove)",
                                        "nullable": true,
                                        "type": "string",
                                        "format": "uuid",
                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                    },
                                    "gradeId": {
                                        "description": "UUID of the grade (null to remove)",
                                        "nullable": true,
                                        "type": "string",
                                        "format": "uuid",
                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                    },
                                    "quantity": {
                                        "description": "Updated quantity",
                                        "type": "number",
                                        "minimum": 1
                                    },
                                    "buyPrice": {
                                        "description": "Purchase price (null to remove)",
                                        "nullable": true,
                                        "type": "string"
                                    },
                                    "buyDate": {
                                        "description": "Purchase date (null to remove)",
                                        "nullable": true,
                                        "type": "string",
                                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                    },
                                    "sellPrice": {
                                        "description": "Listed selling price (null to remove)",
                                        "nullable": true,
                                        "type": "string"
                                    },
                                    "soldPrice": {
                                        "description": "Actual sold price (null to remove)",
                                        "nullable": true,
                                        "type": "string"
                                    },
                                    "soldDate": {
                                        "description": "Sale date (null to remove)",
                                        "nullable": true,
                                        "type": "string",
                                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this card belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "cardId": {
                                            "description": "ID of the card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "parallelId": {
                                            "description": "ID of the card parallel if applicable",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "gradeId": {
                                            "description": "UUID of the grade if card is graded",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "quantity": {
                                            "description": "Quantity of this card in the collection",
                                            "default": 1,
                                            "type": "number",
                                            "minimum": 1
                                        },
                                        "buyPrice": {
                                            "description": "Purchase price of the card",
                                            "type": "string"
                                        },
                                        "buyDate": {
                                            "description": "Date the card was purchased (YYYY-MM-DD)",
                                            "type": "string"
                                        },
                                        "sellPrice": {
                                            "description": "Listed selling price of the card",
                                            "type": "string"
                                        },
                                        "soldPrice": {
                                            "description": "Actual sold price of the card",
                                            "type": "string"
                                        },
                                        "soldDate": {
                                            "description": "Date the card was sold (YYYY-MM-DD)",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId",
                                        "cardId",
                                        "quantity"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the collection card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this card belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "cardId": {
                                            "description": "ID of the card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "parallelId": {
                                            "description": "ID of the card parallel if applicable",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "gradeId": {
                                            "description": "UUID of the grade if card is graded",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "quantity": {
                                            "description": "Quantity of this card in the collection",
                                            "default": 1,
                                            "type": "number",
                                            "minimum": 1
                                        },
                                        "buyPrice": {
                                            "description": "Purchase price of the card",
                                            "type": "string"
                                        },
                                        "buyDate": {
                                            "description": "Date the card was purchased (YYYY-MM-DD)",
                                            "type": "string"
                                        },
                                        "sellPrice": {
                                            "description": "Listed selling price of the card",
                                            "type": "string"
                                        },
                                        "soldPrice": {
                                            "description": "Actual sold price of the card",
                                            "type": "string"
                                        },
                                        "soldDate": {
                                            "description": "Date the card was sold (YYYY-MM-DD)",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId",
                                        "cardId",
                                        "quantity"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove card from collection",
                "tags": [
                    "Collection Management"
                ],
                "description": "Permanently remove a card entry from a collection.\n\n**Path Parameters:**\n- **collectionId**: UUID of the collection\n- **cardId**: UUID of the collection card entry to remove\n\n**\u26a0\ufe0f WARNING:**\n- This action is **irreversible**\n- Removes all associated metadata (grade, purchase info, notes)\n- Does not affect the catalog card data\n- If you have multiple copies, this removes ALL of them\n\n**Important Notes:**\n- Only the collection owner can remove cards\n- Returns 204 No Content on success\n- No response body is returned\n\n**Use Cases:**\n- Remove sold cards\n- Clean up duplicate entries\n- Correct mistaken additions\n- Reorganize collections\n\n**Alternative Actions:**\n- To reduce quantity, use PUT to update quantity field\n- To move to another collection, add to new collection first",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/binders": {
            "post": {
                "summary": "Create a binder",
                "tags": [
                    "Collection Management"
                ],
                "description": "Create a new binder within a collection to organize subsets of cards.\n\nA binder is a virtual container for grouping cards, similar to physical card binders or pages. Use binders to:\n- Organize cards by theme or set\n- Create sale lots or trade packages\n- Build showcase presentations\n- Group cards for specific purposes\n\n**Binder Properties:**\n- **name**: Descriptive name (e.g., \"1989 Rookies\", \"For Sale - PSA 10s\")\n- **description**: Optional detailed description\n- **type**: Purpose designation (showcase, for_sale, for_trade, organizing)\n- **sortOrder**: Display order within collection\n- **isPublic**: Visibility setting for sharing\n\n**Important Notes:**\n- Binders belong to a single collection\n- Cards can exist in multiple binders\n- Binder names must be unique within the collection\n- Empty binders are allowed\n\n**Use Cases:**\n- Create themed showcases\n- Organize cards for sale\n- Build trade packages\n- Separate graded from raw cards",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the binder",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the binder",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List collection binders",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve all binders within a specific collection with pagination and filtering.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n\n**Query Parameters:**\n- **page**: Page number (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **type**: Filter by binder type (showcase, for_sale, for_trade, organizing)\n- **isPublic**: Filter by visibility (true/false)\n- **sortBy**: Sort field (name, createdAt, cardCount, sortOrder)\n- **sortOrder**: asc or desc (default: asc)\n\n**Response includes:**\n- Binder metadata (name, type, description)\n- Card count per binder\n- Total value estimates\n- Creation and update timestamps\n- Pagination metadata\n\n**Use Cases:**\n- Display binder overview\n- Navigate collection structure\n- Find specific binder types\n- Generate binder statistics",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search by binder name (partial match)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort by"
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "binders": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the binder",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionId": {
                                                        "description": "ID of the collection this binder belongs to",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the binder",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the binder",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectionId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "binders",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "binders": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the binder",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionId": {
                                                        "description": "ID of the collection this binder belongs to",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the binder",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the binder",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectionId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "binders",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/binders/{binderId}": {
            "get": {
                "summary": "Get binder details",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve complete details for a specific binder.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the binder\n\n**Response includes:**\n- Complete binder metadata\n- Card count and list preview\n- Total value calculation\n- Type and visibility settings\n- Timestamps\n\n**Security:**\n- Only accessible to the collection owner\n- Returns 404 if binder doesn't exist or belongs to another client\n\n**Use Cases:**\n- View binder contents\n- Load binder for editing\n- Share binder details\n- Prepare for trade or sale",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update binder",
                "tags": [
                    "Collection Management"
                ],
                "description": "Update an existing binder's properties.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the binder to update\n\n**Updatable Fields:**\n- **name**: New binder name (must be unique within collection)\n- **description**: Updated description\n- **type**: Change binder type (showcase, for_sale, for_trade, organizing)\n- **isPublic**: Toggle visibility\n- **sortOrder**: Adjust display order\n\n**Important Notes:**\n- Cannot change the parent collection\n- Binder ID remains the same\n- Cards in binder are not affected\n- Name must remain unique\n\n**Use Cases:**\n- Rename binder\n- Change binder purpose\n- Update description\n- Adjust privacy settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the binder",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the binder",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionId": {
                                            "description": "ID of the collection this binder belongs to",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "name": {
                                            "description": "Name of the binder",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the binder",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectionId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete binder",
                "tags": [
                    "Collection Management"
                ],
                "description": "Permanently delete a binder and remove all card associations.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the binder to delete\n\n**\u26a0\ufe0f WARNING:**\n- This action is **irreversible**\n- All card-to-binder links will be removed\n- Cards remain in the collection (only binder organization is lost)\n- Binder metadata and settings are permanently deleted\n\n**Important Notes:**\n- Does NOT delete the actual cards\n- Cards can still be accessed through the collection\n- Other binders are not affected\n\n**Use Cases:**\n- Remove obsolete binders\n- Clean up organization\n- Delete test binders\n- Consolidate binders",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/binders/{binderId}/cards": {
            "post": {
                "summary": "Add card to binder",
                "tags": [
                    "Collection Management"
                ],
                "description": "Add an existing collection card to a binder for organization.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the target binder\n\n**Request Body:**\n- **collectionCardId**: UUID of the collection card to add\n- **sortOrder**: Optional display order within binder\n- **notes**: Optional binder-specific notes\n\n**Important Notes:**\n- Card must already exist in the collection\n- Same card can be in multiple binders\n- Does not duplicate the card, just creates a link\n- Original card metadata is preserved\n\n**Use Cases:**\n- Organize cards into themed binders\n- Create sale or trade lots\n- Build showcases\n- Group cards for specific purposes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "collectionCardId": {
                                        "description": "UUID of the collection card to add to the binder",
                                        "type": "string",
                                        "format": "uuid",
                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                    }
                                },
                                "required": [
                                    "collectionCardId"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the binder card link",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "binderId": {
                                            "description": "ID of the binder",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "collectionCardId": {
                                            "description": "ID of the collection card",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "binderId",
                                        "collectionCardId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List binder cards",
                "tags": [
                    "Collection Management"
                ],
                "description": "Retrieve all cards organized within a specific binder.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the binder\n\n**Query Parameters:**\n- **page**: Page number (default: 1)\n- **limit**: Items per page (default: 20, max: 100)\n- **sortBy**: Sort field (name, number, value, sortOrder)\n- **sortOrder**: asc or desc (default: asc)\n- **search**: Search card names\n\n**Response includes:**\n- Full card details from catalog\n- Collection-specific metadata\n- Binder-specific sort order\n- Total value calculations\n- Pagination metadata\n\n**Use Cases:**\n- View binder contents\n- Generate binder listings\n- Calculate binder value\n- Export binder inventory",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the binder card link",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "binderId": {
                                                        "description": "ID of the binder",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionCardId": {
                                                        "description": "ID of the collection card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "binderId",
                                                    "collectionCardId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the binder card link",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "binderId": {
                                                        "description": "ID of the binder",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "collectionCardId": {
                                                        "description": "ID of the collection card",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "binderId",
                                                    "collectionCardId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/binders/{binderId}/cards/{cardId}": {
            "delete": {
                "summary": "Remove card from binder",
                "tags": [
                    "Collection Management"
                ],
                "description": "Remove a card's association with a binder without deleting it from the collection.\n\n**Path Parameters:**\n- **collectionId**: UUID of the parent collection\n- **binderId**: UUID of the binder\n- **cardId**: UUID of the binder-card association\n\n**Important Notes:**\n- Only removes the binder link, not the card itself\n- Card remains in the collection\n- Card can still be in other binders\n- This is reversible (card can be re-added)\n\n**Use Cases:**\n- Reorganize binder contents\n- Remove sold cards from sale binder\n- Clean up binder organization\n- Move cards between binders\n\n**Response:**\n- 204 No Content on success\n- No response body",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "binderId",
                        "required": true,
                        "description": "Binder UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Binder Card UUID (the link ID, not the collection card ID)"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/cards/{cardId}/image": {
            "post": {
                "summary": "Upload collection card image",
                "tags": [
                    "Collection Card Images"
                ],
                "description": "Upload a photo of a card in your collection. Maximum file size: 2MB. Accepts JPEG, PNG, WebP, and HEIC formats.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "imageId": {
                                            "description": "Unique identifier for the image record",
                                            "type": "string",
                                            "format": "uuid",
                                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                        },
                                        "uploadedAt": {
                                            "description": "Timestamp when the image was uploaded",
                                            "type": "string"
                                        },
                                        "fullImageUrl": {
                                            "description": "URL to retrieve the full-resolution image",
                                            "type": "string"
                                        },
                                        "thumbnailUrl": {
                                            "description": "URL to retrieve the thumbnail image",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "imageId",
                                        "uploadedAt",
                                        "fullImageUrl",
                                        "thumbnailUrl"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get collection card image",
                "tags": [
                    "Collection Card Images"
                ],
                "description": "Retrieve the full-resolution image added for the specified card within the collection.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response"
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/cards/{cardId}/image/thumb": {
            "get": {
                "summary": "Get collection card image thumbnail",
                "tags": [
                    "Collection Card Images"
                ],
                "description": "Retrieve the thumbnail image added for the specified card within the collection.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "collectionId",
                        "required": true,
                        "description": "Collection UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Collection Card UUID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response"
                    }
                }
            }
        },
        "/v1/lists/": {
            "post": {
                "summary": "Create a new list",
                "tags": [
                    "Lists"
                ],
                "description": "Create a new list of cards (want list, collection goals, etc.)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "collectorId": {
                                        "description": "UUID of the collector who will own this list",
                                        "type": "string",
                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                    },
                                    "name": {
                                        "description": "Name of the list",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the list",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "collectorId"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all lists",
                "tags": [
                    "Lists"
                ],
                "description": "Get all lists for the authenticated client with pagination",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "query",
                        "name": "collectorId",
                        "required": false,
                        "description": "Filter by collector UUID"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "description": "Search by list name (partial match)"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name"
                            ]
                        },
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "description": "Field to sort by"
                    },
                    {
                        "schema": {
                            "default": "asc",
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "in": "query",
                        "name": "order",
                        "required": false,
                        "description": "Sort order"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "lists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "collectorId": {
                                                        "description": "ID of the collector who owns this list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the list",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the list",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectorId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "lists",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "lists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier for the list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "collectorId": {
                                                        "description": "ID of the collector who owns this list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "name": {
                                                        "description": "Name of the list",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of the list",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "collectorId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "lists",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lists/{listId}": {
            "get": {
                "summary": "Get a specific list",
                "tags": [
                    "Lists"
                ],
                "description": "Get details of a specific list by ID",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a list",
                "tags": [
                    "Lists"
                ],
                "description": "Update a specific list by ID",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Name of the list",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the list",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "collectorId": {
                                            "description": "ID of the collector who owns this list",
                                            "type": "string",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                        },
                                        "name": {
                                            "description": "Name of the list",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of the list",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "collectorId"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a list",
                "tags": [
                    "Lists"
                ],
                "description": "Delete a specific list by ID. This will also remove all card associations.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lists/{listId}/cards": {
            "post": {
                "summary": "Add card(s) to a list",
                "tags": [
                    "Lists"
                ],
                "description": "Add one or multiple cards to a specific list. Supports both single card and batch (up to 100 cards) operations.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "cardId": {
                                                "description": "UUID of the card to add to the list",
                                                "type": "string",
                                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                            }
                                        },
                                        "required": [
                                            "cardId"
                                        ]
                                    },
                                    {
                                        "description": "Batch of cards to add (max 100)",
                                        "minItems": 1,
                                        "maxItems": 100,
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "cardId": {
                                                    "description": "UUID of the card to add to the list",
                                                    "type": "string",
                                                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                }
                                            },
                                            "required": [
                                                "cardId"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Single card or batch response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Single card or batch response",
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "description": "Internal ID for the list card",
                                                    "type": "string"
                                                },
                                                "listId": {
                                                    "description": "ID of the list",
                                                    "type": "string",
                                                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                },
                                                "cardId": {
                                                    "description": "ID of the card",
                                                    "type": "string",
                                                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "listId",
                                                "cardId"
                                            ],
                                            "additionalProperties": false
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "cards": {
                                                    "description": "Successfully created cards",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "description": "Internal ID for the list card",
                                                                "type": "string"
                                                            },
                                                            "listId": {
                                                                "description": "ID of the list",
                                                                "type": "string",
                                                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                            },
                                                            "cardId": {
                                                                "description": "ID of the card",
                                                                "type": "string",
                                                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "listId",
                                                            "cardId"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "errors": {
                                                    "description": "Any errors that occurred during batch creation",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "index": {
                                                                "description": "Index of the failed item in the request array",
                                                                "type": "number"
                                                            },
                                                            "cardId": {
                                                                "description": "Card ID that failed",
                                                                "type": "string",
                                                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                            },
                                                            "error": {
                                                                "description": "Error message",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "index",
                                                            "cardId",
                                                            "error"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                }
                                            },
                                            "required": [
                                                "cards"
                                            ],
                                            "additionalProperties": false
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all cards in a list",
                "tags": [
                    "Lists"
                ],
                "description": "Get all cards in a specific list with pagination",
                "parameters": [
                    {
                        "schema": {
                            "default": 20,
                            "type": "integer",
                            "exclusiveMinimum": true,
                            "maximum": 1000
                        },
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "description": "Number of items to return per page. Minimum: 1, Maximum: 1000, Default: 20. Use larger values for bulk data retrieval, smaller for responsive UIs."
                    },
                    {
                        "schema": {
                            "default": 0,
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 9007199254740991
                        },
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "description": "Number of items to skip (offset). Default: 0. Use for pagination: page 2 with take=20 would use skip=20, page 3 would use skip=40, etc."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Internal ID for the list card",
                                                        "type": "string"
                                                    },
                                                    "listId": {
                                                        "description": "ID of the list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "cardId": {
                                                        "description": "ID of the card",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "listId",
                                                    "cardId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Internal ID for the list card",
                                                        "type": "string"
                                                    },
                                                    "listId": {
                                                        "description": "ID of the list",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    },
                                                    "cardId": {
                                                        "description": "ID of the card",
                                                        "type": "string",
                                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "listId",
                                                    "cardId"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total_count": {
                                            "type": "number"
                                        },
                                        "skip": {
                                            "type": "number"
                                        },
                                        "take": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "cards",
                                        "total_count",
                                        "skip",
                                        "take"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lists/{listId}/cards/{cardId}": {
            "delete": {
                "summary": "Remove a card from a list",
                "tags": [
                    "Lists"
                ],
                "description": "Remove a specific card from a list",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "listId",
                        "required": true,
                        "description": "List UUID"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                        },
                        "in": "path",
                        "name": "cardId",
                        "required": true,
                        "description": "Card UUID to remove from list"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/images/cards/{id}": {
            "get": {
                "summary": "Get card image",
                "tags": [
                    "Images"
                ],
                "description": "Retrieve a card image by ID. Returns either raw JPEG (format=raw) or JSON with base64 data (format=json).",
                "parameters": [
                    {
                        "schema": {
                            "default": "raw",
                            "type": "string",
                            "enum": [
                                "raw",
                                "json"
                            ]
                        },
                        "in": "query",
                        "name": "format",
                        "required": false
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response"
                    }
                }
            }
        },
        "/v1/ai/query": {
            "post": {
                "summary": "Process a natural language query",
                "tags": [
                    "AI"
                ],
                "description": "Submit a plaintext natural language question via REST API and receive an AI-generated response.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "description": "Natural language query",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    },
                                    "context": {
                                        "description": "Optional context for the query",
                                        "type": "object",
                                        "properties": {
                                            "collectionId": {
                                                "type": "string",
                                                "format": "uuid",
                                                "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                            },
                                            "userId": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": {}
                                    },
                                    "maxIterations": {
                                        "description": "Maximum tool use iterations (default: 5)",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                    }
                                },
                                "required": [
                                    "query"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "answer": {
                                            "description": "AI-generated response to the query",
                                            "type": "string"
                                        },
                                        "toolsUsed": {
                                            "description": "List of MCP tools used to answer the query",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "processingTime": {
                                            "description": "Time taken to process the query in milliseconds",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "answer",
                                        "processingTime"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "details": {}
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "details": {}
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "details": {}
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/release/{id}": {
            "post": {
                "summary": "Submit feedback for a release",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a specific release in the CardSight catalog.\n\nUse this endpoint to report:\n- Incorrect release information (name, year, manufacturer)\n- Missing or incorrect release metadata\n- Data quality issues with the release\n- General suggestions for improvement\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/set/{id}": {
            "post": {
                "summary": "Submit feedback for a set",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a specific set within a release.\n\nUse this endpoint to report:\n- Incorrect set information (name, card count, subset designation)\n- Missing or duplicate sets\n- Incorrect set ordering or numbering\n- Data quality issues specific to the set\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/card/{id}": {
            "post": {
                "summary": "Submit feedback for a card",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a specific card in the catalog.\n\nUse this endpoint to report:\n- Incorrect player name or card details\n- Wrong card number or designation\n- Missing or incorrect parallel/variant information\n- Incorrect card attributes (rookie card, autograph, memorabilia)\n- Image quality issues or wrong image\n- Pricing discrepancies\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/manufacturer/{id}": {
            "post": {
                "summary": "Submit feedback for a manufacturer",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a specific card manufacturer.\n\nUse this endpoint to report:\n- Incorrect manufacturer name or branding\n- Missing manufacturer information\n- Manufacturer relationship issues\n- Historical inaccuracies about the manufacturer\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/segment/{id}": {
            "post": {
                "summary": "Submit feedback for a segment",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a specific market segment (e.g., Baseball, Football, Basketball).\n\nUse this endpoint to report:\n- Incorrect segment categorization\n- Missing segment information\n- Segment metadata issues\n- General suggestions for segment organization\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/identify/{id}": {
            "post": {
                "summary": "Submit feedback for card identification",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit feedback for a card identification result from the AI identification service.\n\nUse this endpoint to report:\n- Incorrect card identification from uploaded image\n- Wrong player or card details identified\n- Misidentified year, set, or manufacturer\n- AI confidence score issues\n- Suggestions to improve identification accuracy\n\nThis feedback helps improve our AI card identification model.\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message for the same entity within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/general": {
            "post": {
                "summary": "Submit general feedback",
                "tags": [
                    "Feedback"
                ],
                "description": "Submit general feedback about the CardSight API or catalog that is not specific to any particular entity.\n\nUse this endpoint for:\n- API feature requests or suggestions\n- General data quality observations\n- Platform-wide issues or improvements\n- User experience feedback\n- Documentation or integration feedback\n- Business inquiries or partnerships\n\nUnlike other feedback endpoints, this does not require an entity ID.\n\n**Rate Limiting**: Maximum 50 feedback submissions per day per API key\n**Duplicate Detection**: Same feedback message within 1 hour will be rejected",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "feedback_type": {
                                        "type": "string",
                                        "enum": [
                                            "data_error",
                                            "missing_data",
                                            "suggestion",
                                            "bug",
                                            "other"
                                        ]
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/feedback/{id}": {
            "get": {
                "summary": "Retrieve feedback by ID",
                "tags": [
                    "Feedback"
                ],
                "description": "Retrieve a previously submitted feedback entry by its unique ID.\n\n**Important Security Notes:**\n- You can only retrieve feedback submitted by your own API key\n- Attempting to access feedback from another client will result in a 403 Forbidden error\n- The unique ID is a UUID that was returned when the feedback was originally submitted\n\nUse this endpoint to:\n- Check the status of your submitted feedback\n- Retrieve details of feedback for your own records\n- Verify that feedback was successfully submitted\n\n**Response Codes:**\n- 200: Feedback found and belongs to your client\n- 401: Authentication required\n- 403: Feedback exists but belongs to another client\n- 404: Feedback ID not found",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "unique_id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "entity_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "release",
                                                        "set",
                                                        "card",
                                                        "product",
                                                        "manufacturer",
                                                        "segment",
                                                        "general",
                                                        "identify"
                                                    ]
                                                },
                                                "entity_id": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "feedback_type": {
                                                    "nullable": true,
                                                    "type": "string",
                                                    "enum": [
                                                        "data_error",
                                                        "missing_data",
                                                        "suggestion",
                                                        "bug",
                                                        "other"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "not_reviewed",
                                                        "under_review",
                                                        "fixed",
                                                        "wont_fix",
                                                        "duplicate",
                                                        "need_info"
                                                    ]
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unique_id",
                                                "entity_type",
                                                "entity_id",
                                                "feedback_type",
                                                "message",
                                                "status",
                                                "created_at",
                                                "updated_at"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/subscription/": {
            "get": {
                "summary": "Get subscription information",
                "tags": [
                    "Subscription"
                ],
                "description": "Retrieve subscription usage information for the authenticated client.\n\n**Returns:**\n- Total aggregate API calls made across all API keys for the current billing period\n- Array containing usage information for the current API key being used to make this request\n\n**Billing Period:**\n- The billing period is calculated monthly (first day of the current month to present)\n- Usage data is tracked in the api_key_usage_monthly table\n- Calls are aggregated across all API keys belonging to the client\n\n**Response Fields:**\n- `calls`: Total number of API calls across all your API keys for the current billing period\n- `api_keys`: Array with one element showing the current API key and its usage\n  - `key`: The API key used to make this request\n  - `calls`: Number of API calls made using this specific key for the current billing period\n\n**Example Response:**\n```json\n{\n  \"calls\": 1250,\n  \"api_keys\": [\n    {\n      \"key\": \"csa_live_abc123...\",\n      \"calls\": 450\n    }\n  ]\n}\n```\n\n**Use Cases:**\n- Monitor your API usage to stay within subscription limits\n- Track usage by individual API key\n- Identify which keys are making the most requests\n- Billing and cost tracking",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "calls": {
                                            "description": "Total aggregate number of API calls made across all API keys for the current billing period",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 9007199254740991
                                        },
                                        "api_keys": {
                                            "description": "Array containing usage information for the current API key only",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "description": "The API key (masked or full depending on context)",
                                                        "type": "string"
                                                    },
                                                    "calls": {
                                                        "description": "Total number of API calls made using this key for the current billing period",
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "maximum": 9007199254740991
                                                    }
                                                },
                                                "required": [
                                                    "key",
                                                    "calls"
                                                ],
                                                "additionalProperties": false
                                            }
                                        }
                                    },
                                    "required": [
                                        "calls",
                                        "api_keys"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/grades/companies": {
            "get": {
                "summary": "List all grading companies",
                "tags": [
                    "Grades"
                ],
                "description": "Retrieve a complete list of all grading companies available in the system.\n\n**Grading companies** are organizations that authenticate and grade trading cards, such as PSA, BGS (Beckett), SGC, and CGC.\n\n**Response includes:**\n- List of all grading companies with metadata\n- Company names, descriptions, and notes\n- Total count of companies\n\n**Use Cases:**\n- Display grading company selection in UI\n- Populate dropdown menus for grading filters\n- Show available grading options to users\n- Reference data for collection management\n\n**Example Companies:**\n- PSA (Professional Sports Authenticator)\n- BGS (Beckett Grading Services)\n- SGC (Sportscard Guaranty)\n- CGC (Certified Guaranty Company)\n\n**Important Notes:**\n- This endpoint returns all companies in the system\n- Companies are sorted alphabetically by name\n- No authentication required (public reference data)",
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "companies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "note",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "companies",
                                        "total"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "companies": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "note",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "companies",
                                        "total"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/grades/companies/{companyId}/types": {
            "get": {
                "summary": "Get grading types for a company",
                "tags": [
                    "Grades"
                ],
                "description": "Retrieve all grading types offered by a specific grading company.\n\n**Grading types** represent different grading services offered by a company, such as:\n- PSA: Regular, Crossover, Dual Grade\n- BGS: Standard, Black Label, Pristine\n- SGC: Regular, Tuxedo, Premium\n\n**Path Parameters:**\n- **companyId**: UUID of the grading company\n\n**Response includes:**\n- List of all grading types for the company\n- Type names, descriptions, and notes\n- Parent grading company information for context\n- Total count of types\n\n**Use Cases:**\n- Display available grading services for a company\n- Filter grades by grading type\n- Show grading options when adding cards to collection\n- Populate grading type selection in UI\n\n**Example Types:**\n- PSA Regular (standard PSA grading)\n- BGS Black Label (perfect 10 across all subgrades)\n- SGC Tuxedo (premium black label holder)\n\n**Important Notes:**\n- Types are specific to each grading company\n- Returns 404 if company ID doesn't exist\n- Types are sorted alphabetically by name",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "companyId",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "gradingCompanyId",
                                                    "gradingCompanyName",
                                                    "name",
                                                    "description",
                                                    "note",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        },
                                        "gradingCompany": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "types",
                                        "total",
                                        "gradingCompany"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "nullable": true,
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "gradingCompanyId",
                                                    "gradingCompanyName",
                                                    "name",
                                                    "description",
                                                    "note",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        },
                                        "gradingCompany": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "types",
                                        "total",
                                        "gradingCompany"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/grades/companies/{companyId}/types/{typeId}/grades": {
            "get": {
                "summary": "Get grades for a grading type",
                "tags": [
                    "Grades"
                ],
                "description": "Retrieve all specific grades available for a grading type.\n\n**Grades** are the actual numeric/letter grades assigned to cards, such as:\n- PSA: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n- BGS: 1, 1.5, 2, 2.5, ... 9, 9.5, 10\n- SGC: 1, 1.5, 2, 2.5, ... 9, 9.5, 10\n\n**Path Parameters:**\n- **companyId**: UUID of the grading company\n- **typeId**: UUID of the grading type\n\n**Response includes:**\n- List of all grades for the grading type\n- Grade values (as strings to support decimals like \"9.5\")\n- Parent grading type and company information for context\n- Total count of grades\n\n**Use Cases:**\n- Display available grades when adding graded cards to collection\n- Filter collection cards by specific grade\n- Show grade options in grading selection UI\n- Validate grade values for card submissions\n\n**Example Grades:**\n- PSA 10 (Gem Mint)\n- PSA 9 (Mint)\n- BGS 9.5 (Gem Mint)\n- SGC 10 (Pristine)\n\n**Important Notes:**\n- Grades are specific to each grading type\n- Grade values are stored as strings to support decimal grades\n- Returns 404 if company or type ID doesn't exist\n- Validates that the type belongs to the specified company\n- Grades are sorted by their grade value",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "companyId",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "in": "path",
                        "name": "typeId",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grades": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingTypeId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingTypeName": {
                                                        "type": "string"
                                                    },
                                                    "gradingCompanyId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "grade": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "gradingTypeId",
                                                    "gradingTypeName",
                                                    "gradingCompanyId",
                                                    "gradingCompanyName",
                                                    "grade",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        },
                                        "gradingType": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradingCompanyId": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradingCompanyName": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "gradingCompanyId",
                                                "gradingCompanyName",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "gradingCompany": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "grades",
                                        "total",
                                        "gradingType",
                                        "gradingCompany"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grades": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingTypeId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingTypeName": {
                                                        "type": "string"
                                                    },
                                                    "gradingCompanyId": {
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                    },
                                                    "gradingCompanyName": {
                                                        "type": "string"
                                                    },
                                                    "grade": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "gradingTypeId",
                                                    "gradingTypeName",
                                                    "gradingCompanyId",
                                                    "gradingCompanyName",
                                                    "grade",
                                                    "createdAt",
                                                    "updatedAt"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "total": {
                                            "type": "number"
                                        },
                                        "gradingType": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradingCompanyId": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "gradingCompanyName": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "gradingCompanyId",
                                                "gradingCompanyName",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        },
                                        "gradingCompany": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                },
                                                "updatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "description",
                                                "note",
                                                "createdAt",
                                                "updatedAt"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "grades",
                                        "total",
                                        "gradingType",
                                        "gradingCompany"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Default Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "code": {
                                            "description": "Error code for programmatic handling",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "code"
                                    ],
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://api.cardsight.ai",
            "description": "CardSight AI API"
        }
    ],
    "security": [
        {
            "apiKey": []
        }
    ]
}
